<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.tianxia.admin.domain.txdata.UserMemberMapper">
	<resultMap id="BaseResultMap"
		type="com.cn.tianxia.admin.project.txdata.UserMember">
		<id column="uid" property="uid" jdbcType="INTEGER" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="realname" property="realname" jdbcType="VARCHAR" />
		<result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
		<result column="reg_ip" property="regIp" jdbcType="VARCHAR" />
		<result column="ag_username" property="agUsername" jdbcType="VARCHAR" />
		<result column="ag_password" property="agPassword" jdbcType="VARCHAR" />
		<result column="hg_username" property="hgUsername" jdbcType="VARCHAR" />
		<result column="mg_username" property="mgUsername" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="vip_level" property="vipLevel" jdbcType="CHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="cagent" property="cagent" jdbcType="VARCHAR" />
		<result column="is_daili" property="isDaili" jdbcType="CHAR" />
		<result column="is_delete" property="isDelete" jdbcType="CHAR" />
		<result column="qk_pwd" property="qkPwd" jdbcType="VARCHAR" />
		<result column="reg_date" property="regDate" jdbcType="TIMESTAMP" />
		<result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
		<result column="wallet" property="wallet" jdbcType="DOUBLE" />
		<result column="top_uid" property="topUid" jdbcType="INTEGER" />
		<result column="is_stop" property="isStop" jdbcType="CHAR" />
		<result column="is_mobile" property="isMobile" jdbcType="CHAR" />
		<result column="rmk" property="rmk" jdbcType="VARCHAR" />
		<result column="type_id" property="typeId" jdbcType="INTEGER" />
		<result column="junior_uid" property="juniorUid" jdbcType="INTEGER" />
		<result column="regurl" property="regurl" jdbcType="VARCHAR" />
		<result column="loginmobile" property="loginmobile" jdbcType="VARCHAR" />
		<result column="userQuantity" property="userQuantity" jdbcType="VARCHAR" />
		<result column="userWinAmount" property="userWinAmount"
			jdbcType="DOUBLE" />
		<result column="typeName" property="typeName" jdbcType="VARCHAR" />
		<result column="markingQuantity" property="markingQuantity"
			jdbcType="VARCHAR" />
		<result column="integral" property="integral" jdbcType="VARCHAR" />
		<result column="quantityId" property="quantityId" jdbcType="INTEGER" />
		<result column="topUidName" property="topUidName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		uid, password, username, realname, login_ip, reg_ip,
		ag_username,
		ag_password, hg_username,
		mg_username, email, vip_level,
		mobile, cagent, is_daili, is_delete, qk_pwd,
		reg_date,
		login_time,
		wallet, top_uid, is_stop, is_mobile, rmk, type_id, junior_uid,
		regurl,
		loginmobile
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_user
		where uid = #{uid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_user
		where uid = #{uid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.cn.tianxia.admin.project.txdata.UserMember">
		insert into t_user (uid,
		password, username,
		realname, login_ip, reg_ip,
		ag_username,
		ag_password, hg_username,
		mg_username, email, vip_level,
		mobile, cagent,
		is_daili,
		is_delete, qk_pwd, reg_date,
		login_time, wallet, top_uid,
		is_stop, is_mobile, rmk, type_id,
		junior_uid, regurl, loginmobile
		)
		values (#{uid,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR},
		#{username,jdbcType=VARCHAR},
		#{realname,jdbcType=VARCHAR},
		#{loginIp,jdbcType=VARCHAR}, #{regIp,jdbcType=VARCHAR},
		#{agUsername,jdbcType=VARCHAR}, #{agPassword,jdbcType=VARCHAR},
		#{hgUsername,jdbcType=VARCHAR},
		#{mgUsername,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{vipLevel,jdbcType=CHAR},
		#{mobile,jdbcType=VARCHAR}, #{cagent,jdbcType=VARCHAR},
		#{isDaili,jdbcType=CHAR},
		#{isDelete,jdbcType=CHAR},
		#{qkPwd,jdbcType=VARCHAR}, #{regDate,jdbcType=TIMESTAMP},
		#{loginTime,jdbcType=TIMESTAMP}, #{wallet,jdbcType=DOUBLE},
		#{topUid,jdbcType=INTEGER},
		#{isStop,jdbcType=CHAR},
		#{isMobile,jdbcType=CHAR}, #{rmk,jdbcType=VARCHAR},
		#{typeId,jdbcType=INTEGER},
		#{juniorUid,jdbcType=INTEGER},
		#{regurl,jdbcType=VARCHAR}, #{loginmobile,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.cn.tianxia.admin.project.txdata.UserMember">
		insert into t_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="null !=uid">
				uid,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="realname != null">
				realname,
			</if>
			<if test="loginIp != null">
				login_ip,
			</if>
			<if test="regIp != null">
				reg_ip,
			</if>
			<if test="agUsername != null">
				ag_username,
			</if>
			<if test="agPassword != null">
				ag_password,
			</if>
			<if test="hgUsername != null">
				hg_username,
			</if>
			<if test="mgUsername != null">
				mg_username,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="vipLevel != null">
				vip_level,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="cagent != null">
				cagent,
			</if>
			<if test="isDaili != null">
				is_daili,
			</if>
			<if test="isDelete != null">
				is_delete,
			</if>
			<if test="qkPwd != null">
				qk_pwd,
			</if>
			<if test="regDate != null">
				reg_date,
			</if>
			<if test="loginTime != null">
				login_time,
			</if>
			<if test="wallet != null">
				wallet,
			</if>
			<if test="topUid != null">
				top_uid,
			</if>
			<if test="isStop != null">
				is_stop,
			</if>
			<if test="isMobile != null">
				is_mobile,
			</if>
			<if test="rmk != null">
				rmk,
			</if>
			<if test="typeId != null">
				type_id,
			</if>
			<if test="juniorUid != null">
				junior_uid,
			</if>
			<if test="regurl != null">
				regurl,
			</if>
			<if test="loginmobile != null">
				loginmobile,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="loginIp != null">
				#{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="regIp != null">
				#{regIp,jdbcType=VARCHAR},
			</if>
			<if test="agUsername != null">
				#{agUsername,jdbcType=VARCHAR},
			</if>
			<if test="agPassword != null">
				#{agPassword,jdbcType=VARCHAR},
			</if>
			<if test="hgUsername != null">
				#{hgUsername,jdbcType=VARCHAR},
			</if>
			<if test="mgUsername != null">
				#{mgUsername,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="vipLevel != null">
				#{vipLevel,jdbcType=CHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="cagent != null">
				#{cagent,jdbcType=VARCHAR},
			</if>
			<if test="isDaili != null">
				#{isDaili,jdbcType=CHAR},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=CHAR},
			</if>
			<if test="qkPwd != null">
				#{qkPwd,jdbcType=VARCHAR},
			</if>
			<if test="regDate != null">
				#{regDate,jdbcType=TIMESTAMP},
			</if>
			<if test="loginTime != null">
				#{loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="wallet != null">
				#{wallet,jdbcType=DOUBLE},
			</if>
			<if test="topUid != null">
				#{topUid,jdbcType=INTEGER},
			</if>
			<if test="isStop != null">
				#{isStop,jdbcType=CHAR},
			</if>
			<if test="isMobile != null">
				#{isMobile,jdbcType=CHAR},
			</if>
			<if test="rmk != null">
				#{rmk,jdbcType=VARCHAR},
			</if>
			<if test="typeId != null">
				#{typeId,jdbcType=INTEGER},
			</if>
			<if test="juniorUid != null">
				#{juniorUid,jdbcType=INTEGER},
			</if>
			<if test="regurl != null">
				#{regurl,jdbcType=VARCHAR},
			</if>
			<if test="loginmobile != null">
				#{loginmobile,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.cn.tianxia.admin.vo.txdata.AddUserMemberVO">
		update t_user
		<set>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				realname = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="loginIp != null">
				login_ip = #{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="regIp != null">
				reg_ip = #{regIp,jdbcType=VARCHAR},
			</if>
			<if test="agUsername != null">
				ag_username = #{agUsername,jdbcType=VARCHAR},
			</if>
			<if test="agPassword != null">
				ag_password = #{agPassword,jdbcType=VARCHAR},
			</if>
			<if test="hgUsername != null">
				hg_username = #{hgUsername,jdbcType=VARCHAR},
			</if>
			<if test="vipLevel != null">
				vip_level = #{vipLevel,jdbcType=CHAR},
			</if>
			<if test="cagent != null">
				cagent = #{cagent,jdbcType=VARCHAR},
			</if>
			<if test="qkPwd != null">
				qk_pwd = #{qkPwd,jdbcType=VARCHAR},
			</if>
			<if test="topUid != null">
				top_uid = #{topUid,jdbcType=INTEGER},
			</if>
			<if test="typeId != null">
				type_id = #{typeId,jdbcType=INTEGER},
			</if>
			<if test="juniorUid != null">
				junior_uid = #{juniorUid,jdbcType=INTEGER},
			</if>
		</set>
		where uid = #{uid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cn.tianxia.admin.project.txdata.UserMember">
		update t_user
		set
		password = #{password,jdbcType=VARCHAR},
		username =
		#{username,jdbcType=VARCHAR},
		realname = #{realname,jdbcType=VARCHAR},
		login_ip = #{loginIp,jdbcType=VARCHAR},
		reg_ip =
		#{regIp,jdbcType=VARCHAR},
		ag_username =
		#{agUsername,jdbcType=VARCHAR},
		ag_password =
		#{agPassword,jdbcType=VARCHAR},
		hg_username =
		#{hgUsername,jdbcType=VARCHAR},
		mg_username =
		#{mgUsername,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		vip_level = #{vipLevel,jdbcType=CHAR},
		mobile =
		#{mobile,jdbcType=VARCHAR},
		cagent = #{cagent,jdbcType=VARCHAR},
		is_daili = #{isDaili,jdbcType=CHAR},
		is_delete =
		#{isDelete,jdbcType=CHAR},
		qk_pwd = #{qkPwd,jdbcType=VARCHAR},
		reg_date
		= #{regDate,jdbcType=TIMESTAMP},
		login_time =
		#{loginTime,jdbcType=TIMESTAMP},
		wallet = #{wallet,jdbcType=DOUBLE},
		top_uid = #{topUid,jdbcType=INTEGER},
		is_stop =
		#{isStop,jdbcType=CHAR},
		is_mobile = #{isMobile,jdbcType=CHAR},
		rmk =
		#{rmk,jdbcType=VARCHAR},
		type_id = #{typeId,jdbcType=INTEGER},
		junior_uid = #{juniorUid,jdbcType=INTEGER},
		regurl =
		#{regurl,jdbcType=VARCHAR},
		loginmobile =
		#{loginmobile,jdbcType=VARCHAR}
		where uid = #{uid,jdbcType=INTEGER}
	</update>

	<select id="memberInquiry" resultMap="BaseResultMap"
		parameterType="com.cn.tianxia.admin.common.Pager">
		SELECT
		t.`uid`,
		t.username,
		t.realname,
		t.login_ip,
		t.reg_ip,
		t.email,
		t.vip_level,
		t.mobile,
		t.cagent,
		t.is_daili,
		t.is_delete,
		t.reg_date,
		t.login_time,
		t.wallet,
		t.top_uid,
		t.is_stop,
		t.is_mobile,
		t.rmk,
		t.type_id,
		t.regurl
		FROM
		t_user t
		<where>
			t.uid IN (
			SELECT
			uid
			FROM
			(
			SELECT
			uid
			FROM
			t_user t1
			<where>
				<if test="params.containsKey('startTime') and params.startTime!='' ">
					                <![CDATA[ and  reg_date >= #{params.startTime}   ]]>
				</if>
				<if test="params.containsKey('endTime') and params.endTime!='' ">
					           	  <![CDATA[ and reg_date <= #{params.endTime} ]]>
				</if>
				<if test="params.containsKey('type') and  params.type !='' ">
					and t1.type = #{params.type}
				</if>
				<if test="params.containsKey('urlUserType') and params.urlUserType!='' ">
					and t1.type_id = #{params.urlUserType}
				</if>
				<if test="params.containsKey('urlCagent') and params.urlCagent!='' ">
					and t1.cagent = #{params.urlCagent}
				</if>
				<if test="params.containsKey('queryCagent') and params.queryCagent!='' ">
					and t1.cagent = #{params.queryCagent}
				</if>
				<if test="params.containsKey('isStop') and  params.isStop!='' ">
					and t1.is_stop = #{params.isStop}
				</if>
				<if test="params.containsKey('regurl') and params.regurl !='' ">
					and t1.regurl = #{params.regurl}
				</if>
				<if test="params.containsKey('username') and params.username !='' ">
					and t1.username like concat('%',#{params.username},'%')
				</if>
				<if test="params.containsKey('bankCard') and params.bankCard !='' ">
					and t1.uid in (select uid from t_user_card where
					t_user_card.card_num
					like concat('%',#{params.bankCard},'%'))
				</if>
				<if
					test="params.containsKey('cardUsername') and params.cardUsername !='' ">
					and t1.uid in (select uid from t_user_card where
					t_user_card.card_username like
					concat('%',#{params.cardUsername},'%'))
				</if>
				<if test="params.containsKey('realname') and params.realname!='' ">
					and t1.realname = #{params.realname}
				</if>

				<if test="params.containsKey('loginIp') and params.loginIp!='' ">
					and ((t1.login_ip = INET_ATON(#{params.loginIp})) OR
					t1.uid in (select
					uid from t_user_login where
					login_ip=INET_ATON(#{params.loginIp})))
				</if>
				<if test="params.containsKey('regIp') and params.regIp!='' ">
					and t1.reg_ip = INET_ATON(#{params.regIp})
				</if>
				<if test="params.containsKey('mobile')  and params.mobile!='' ">
					and t1.mobile = #{params.mobile}
				</if>
				<if test="params.containsKey('wallet') and params.wallet!='' ">
					                <![CDATA[ and t1.wallet > #{params.wallet}  ]]>
				</if>
				<if test="params.containsKey('cagent') and params.cagent!='' ">
					and t1.cagent = #{params.cagent}
				</if>
				<if test="params.containsKey('topUidName') and params.topUidName!='' ">
					and
					<choose>
						<when test="params.topUidName == '平台会员'">
							t1.top_uid &lt; 1
						</when>
						<otherwise>
							t1.top_uid=(select id from `user` us where
							us.login_name = #{params.topUidName})
						</otherwise>
					</choose>
				</if>
				<if
					test="params.containsKey('userTypeName') and params.userTypeName !='' ">
					and t1.type_id in (select id from t_user_type tut where
					tut.typename =
					#{params.userTypeName})
				</if>

				<if test="params.containsKey('quantity') and params.quantity !='' ">
						       		<![CDATA[
						       		and t1.uid in ( select uid from (
									SELECT
										tt.uid,
										sum(tt.valid_bet_amount) AS userQuantity
									FROM
										t_user_platform_report tt
									GROUP BY
										tt.uid) b where userQuantity > #{params.quantity}  ) ]]>

				</if>
				<if test="params.containsKey('winAmountGT') and params.winAmountGT != ''">
						       		<![CDATA[
						       		and t1.uid in (
						       		select uid from (
										SELECT
											tt.uid, 
											sum(tt.net_amount) AS userWinAmount
										FROM
											t_user_platform_report tt
										GROUP BY
											tt.uid) b where userWinAmount > #{params.winAmountGT} 
						       		)
						       		 ]]>
				</if>
				<if test="params.containsKey('winAmountLT') and params.winAmountLT !='' ">
						       		<![CDATA[
						       			and t1.uid in (
						       		select uid from (
										SELECT
											tt.uid, 
											sum(tt.net_amount) AS userWinAmount
										FROM
											t_user_platform_report tt
										GROUP BY
											tt.uid) b where userWinAmount < #{params.winAmountLT} 
						       			)
						       		 ]]>
				</if>
			</where>
			ORDER BY t1.reg_date DESC
			limit ${(page-1)*limit},#{limit}
			) b
			)
			order by
			reg_date DESC
		</where>
	</select>


	<select id="memberInquiryCount" parameterType="com.cn.tianxia.admin.common.Pager"
		resultType="java.lang.Integer">
		SELECT
		count(1) as count
		FROM
		t_user t
		<where>
			<if test="params.containsKey('startTime') and params.startTime!='' ">
					                <![CDATA[ and  reg_date >= #{params.startTime}   ]]>
			</if>
			<if test="params.containsKey('endTime') and params.endTime!='' ">
					           	  <![CDATA[ and reg_date <= #{params.endTime} ]]>
			</if>
			<if test="params.containsKey('type') and  params.type !='' ">
				and t.type = #{params.type}
			</if>
			<if test="params.containsKey('urlUserType') and params.urlUserType!='' ">
				and t.type_id = #{params.urlUserType}
			</if>
			<if test="params.containsKey('urlCagent') and params.urlCagent!='' ">
				and t.cagent = #{params.urlCagent}
			</if>
			<if test="params.containsKey('queryCagent') and params.queryCagent!='' ">
				and t.cagent = #{params.queryCagent}
			</if>
			<if test="params.containsKey('isStop') and  params.isStop!='' ">
				and t.is_stop = #{params.isStop}
			</if>
			<if test="params.containsKey('regurl') and params.regurl !='' ">
				and t.regurl = #{params.regurl}
			</if>
			<if test="params.containsKey('username') and params.username !='' ">
				and t.username like concat('%',#{params.username},'%')
			</if>
			<if test="params.containsKey('bankCard') and params.bankCard !='' ">
				and t.uid in (select uid from t_user_card where
				t_user_card.card_num
				like concat('%',#{params.bankCard},'%'))
			</if>
			<if
				test="params.containsKey('cardUsername') and params.cardUsername !='' ">
				and t.uid in (select uid from t_user_card where
				t_user_card.card_username like
				concat('%',#{params.cardUsername},'%'))
			</if>
			<if test="params.containsKey('realname') and params.realname!='' ">
				and t.realname = #{params.realname}
			</if>

			<if test="params.containsKey('loginIp') and params.loginIp!='' ">
				and ((t.login_ip = INET_ATON(#{params.loginIp})) OR
				t.uid
				in (select
				uid from t_user_login where
				login_ip=INET_ATON(#{params.loginIp})))
			</if>
			<if test="params.containsKey('regIp') and params.regIp!='' ">
				and t.reg_ip = INET_ATON(#{params.regIp})
			</if>
			<if test="params.containsKey('mobile')  and params.mobile!='' ">
				and t.mobile = #{params.mobile}
			</if>
			<if test="params.containsKey('wallet') and params.wallet!='' ">
					                <![CDATA[ and t.wallet > #{params.wallet}  ]]>
			</if>
			<if test="params.containsKey('cagent') and params.cagent!='' ">
				and t.cagent = #{params.cagent}
			</if>
			<if test="params.containsKey('topUidName') and params.topUidName!='' ">
				and
				<choose>
					<when test="params.topUidName == '平台会员'">
						t.top_uid &lt; 1
					</when>
					<otherwise>
						t.top_uid=(select id from `user` us where
						us.login_name =
						#{params.topUidName})
					</otherwise>
				</choose>
			</if>
			<if
				test="params.containsKey('userTypeName') and params.userTypeName !='' ">
				and t.type_id in (select id from t_user_type tut where
				tut.typename =
				#{params.userTypeName})
			</if>

			<if test="params.containsKey('quantity') and params.quantity !='' ">
						       		<![CDATA[
						       		and t.uid in ( select uid from (
									SELECT
										tt.uid,
										sum(tt.valid_bet_amount) AS userQuantity
									FROM
										t_user_platform_report tt
									GROUP BY
										tt.uid) b where userQuantity > #{params.quantity}  ) ]]>

			</if>
			<if test="params.containsKey('winAmountGT') and params.winAmountGT != ''">
						       		<![CDATA[
						       		and t.uid in (
						       		select uid from (
										SELECT
											tt.uid, 
											sum(tt.net_amount) AS userWinAmount
										FROM
											t_user_platform_report tt
										GROUP BY
											tt.uid) b where userWinAmount > #{params.winAmountGT} 
						       		)
						       		 ]]>
			</if>
			<if test="params.containsKey('winAmountLT') and params.winAmountLT !='' ">
						       		<![CDATA[
						       			and t.uid in (
						       		select uid from (
										SELECT
											tt.uid, 
											sum(tt.net_amount) AS userWinAmount
										FROM
											t_user_platform_report tt
										GROUP BY
											tt.uid) b where userWinAmount < #{params.winAmountLT} 
						       			)
						       		 ]]>
			</if>
		</where>
	</select>


	<select id="ismemberAccount" parameterType="com.cn.tianxia.admin.vo.txdata.AddUserMemberVO"
		resultType="java.lang.Integer">
		SELECT COUNT(1) FROM t_user WHERE username=#{username} AND
		cagent=#{cagent}
	</select>



	<insert id="addUserMember" parameterType="com.cn.tianxia.admin.vo.txdata.AddUserMemberVO"
		useGeneratedKeys="true" keyProperty="uid">
		insert into t_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uid !=null">
				uid,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="realname != null">
				realname,
			</if>
			<if test="loginIp != null">
				login_ip,
			</if>
			<if test="regIp != null">
				reg_ip,
			</if>
			<if test="agUsername != null">
				ag_username,
			</if>
			<if test="agPassword != null">
				ag_password,
			</if>
			<if test="hgUsername != null">
				hg_username,
			</if>
			<if test="vipLevel != null">
				vip_level,
			</if>
			<if test="cagent != null">
				cagent,
			</if>
			<if test="qkPwd != null">
				qk_pwd,
			</if>
			<if test="topUid != null">
				top_uid,
			</if>
			<if test="typeId != null">
				type_id,
			</if>
			<if test="juniorUid != null">
				junior_uid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="loginIp != null">
				#{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="regIp != null">
				#{regIp,jdbcType=VARCHAR},
			</if>
			<if test="agUsername != null">
				#{agUsername,jdbcType=VARCHAR},
			</if>
			<if test="agPassword != null">
				#{agPassword,jdbcType=VARCHAR},
			</if>
			<if test="hgUsername != null">
				#{hgUsername,jdbcType=VARCHAR},
			</if>
			<if test="vipLevel != null">
				#{vipLevel,jdbcType=CHAR},
			</if>
			<if test="cagent != null">
				#{cagent,jdbcType=VARCHAR},
			</if>
			<if test="qkPwd != null">
				#{qkPwd,jdbcType=VARCHAR},
			</if>
			<if test="topUid != null">
				#{topUid,jdbcType=INTEGER},
			</if>
			<if test="typeId != null">
				#{typeId,jdbcType=INTEGER},
			</if>
			<if test="juniorUid != null">
				#{juniorUid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<select id="editPage" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		uid,
		username,
		realname,
		mobile
		from t_user where uid = #{uid}
	</select>


	<update id="editUserMember" parameterType="com.cn.tianxia.admin.vo.txdata.EditUserMemberVO">
		update ${freeUser}
		<set>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				realname = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="qkPwd != null">
				qk_pwd = #{qkPwd,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="rmk != null">
				rmk = #{rmk,jdbcType=VARCHAR},
			</if>
		</set>
		where uid = #{uid,jdbcType=INTEGER}
	</update>

	<update id="disabledEntity" parameterType="com.cn.tianxia.admin.vo.txdata.DisabledEntityVO">
		update ${freeUser}
		<set>
			is_stop = ${isStop}
		</set>
		where uid in (${uid})
	</update>

	<update id="editTopUidName" parameterType="com.cn.tianxia.admin.vo.txdata.EditTopUidVO">
		update t_user set
		top_uid=#{topUid}
		where uid in(${uid})
	</update>


	<update id="editUserType" parameterType="com.cn.tianxia.admin.vo.txdata.EditUserTypeVO">
		update t_user set
		type_id=#{typeid}
		where uid in(${uids})
	</update>


	<select id="userMemberTs" parameterType="com.cn.tianxia.admin.vo.txdata.UserMemberTsVO"
		resultType="com.cn.tianxia.admin.project.txdata.UserMemberTs">
		SELECT
		id,
		uid,
		cid,
		gametype,
		note_num as noteNum,
		bet_amount as betAmount,
		valid_bet_amount as validBetAmount,
		net_amount as netAmount,
		ts_amount as tsAmount,
		updatetime
		FROM
		t_user_ts
		WHERE
		uid = #{uid}
		<if test="gametype !=null and gametype !='' ">
			and gametype = #{gametype}
		</if>
	</select>




</mapper>