<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.tianxia.admin.domain.txdata.PlatWithdrawalMapper" >
  <resultMap id="BaseResultMap" type="com.cn.tianxia.admin.project.txdata.PlatWithdrawal" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="company_pay_prop" property="companyPayProp" jdbcType="REAL" />
    <result column="gift_bonus_prop" property="giftBonusProp" jdbcType="REAL" />
    <result column="gift_bonus_limit" property="giftBonusLimit" jdbcType="INTEGER" />
    <result column="dama" property="dama" jdbcType="REAL" />
    <result column="free_withdraw_time" property="freeWithdrawTime" jdbcType="INTEGER" />
    <result column="withdraw_fee" property="withdrawFee" jdbcType="REAL" />
    <result column="withdraw_manage_fee" property="withdrawManageFee" jdbcType="INTEGER" />
    <result column="compulsory_withdrawal_fee" property="compulsoryWithdrawalFee" jdbcType="REAL" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, cid, company_pay_prop, gift_bonus_prop, gift_bonus_limit, dama, free_withdraw_time, 
    withdraw_fee, withdraw_manage_fee, compulsory_withdrawal_fee, updatetime, uid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_pay_withdraw_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_pay_withdraw_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.tianxia.admin.project.txdata.PlatWithdrawal" >
    insert into t_pay_withdraw_config (id, cid, company_pay_prop, 
      gift_bonus_prop, gift_bonus_limit, dama, 
      free_withdraw_time, withdraw_fee, withdraw_manage_fee, 
      compulsory_withdrawal_fee, updatetime, uid
      )
    values (#{id,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{companyPayProp,jdbcType=REAL}, 
      #{giftBonusProp,jdbcType=REAL}, #{giftBonusLimit,jdbcType=INTEGER}, #{dama,jdbcType=REAL}, 
      #{freeWithdrawTime,jdbcType=INTEGER}, #{withdrawFee,jdbcType=REAL}, #{withdrawManageFee,jdbcType=INTEGER}, 
      #{compulsoryWithdrawalFee,jdbcType=REAL}, #{updatetime,jdbcType=TIMESTAMP}, #{uid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cn.tianxia.admin.project.txdata.PlatWithdrawal" >
    insert into t_pay_withdraw_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="companyPayProp != null" >
        company_pay_prop,
      </if>
      <if test="giftBonusProp != null" >
        gift_bonus_prop,
      </if>
      <if test="giftBonusLimit != null" >
        gift_bonus_limit,
      </if>
      <if test="dama != null" >
        dama,
      </if>
      <if test="freeWithdrawTime != null" >
        free_withdraw_time,
      </if>
      <if test="withdrawFee != null" >
        withdraw_fee,
      </if>
      <if test="withdrawManageFee != null" >
        withdraw_manage_fee,
      </if>
      <if test="compulsoryWithdrawalFee != null" >
        compulsory_withdrawal_fee,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="uid != null" >
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="companyPayProp != null" >
        #{companyPayProp,jdbcType=REAL},
      </if>
      <if test="giftBonusProp != null" >
        #{giftBonusProp,jdbcType=REAL},
      </if>
      <if test="giftBonusLimit != null" >
        #{giftBonusLimit,jdbcType=INTEGER},
      </if>
      <if test="dama != null" >
        #{dama,jdbcType=REAL},
      </if>
      <if test="freeWithdrawTime != null" >
        #{freeWithdrawTime,jdbcType=INTEGER},
      </if>
      <if test="withdrawFee != null" >
        #{withdrawFee,jdbcType=REAL},
      </if>
      <if test="withdrawManageFee != null" >
        #{withdrawManageFee,jdbcType=INTEGER},
      </if>
      <if test="compulsoryWithdrawalFee != null" >
        #{compulsoryWithdrawalFee,jdbcType=REAL},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.tianxia.admin.project.txdata.PlatWithdrawal" >
    update t_pay_withdraw_config
    <set >
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="companyPayProp != null" >
        company_pay_prop = #{companyPayProp,jdbcType=REAL},
      </if>
      <if test="giftBonusProp != null" >
        gift_bonus_prop = #{giftBonusProp,jdbcType=REAL},
      </if>
      <if test="giftBonusLimit != null" >
        gift_bonus_limit = #{giftBonusLimit,jdbcType=INTEGER},
      </if>
      <if test="dama != null" >
        dama = #{dama,jdbcType=REAL},
      </if>
      <if test="freeWithdrawTime != null" >
        free_withdraw_time = #{freeWithdrawTime,jdbcType=INTEGER},
      </if>
      <if test="withdrawFee != null" >
        withdraw_fee = #{withdrawFee,jdbcType=REAL},
      </if>
      <if test="withdrawManageFee != null" >
        withdraw_manage_fee = #{withdrawManageFee,jdbcType=INTEGER},
      </if>
      <if test="compulsoryWithdrawalFee != null" >
        compulsory_withdrawal_fee = #{compulsoryWithdrawalFee,jdbcType=REAL},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.tianxia.admin.project.txdata.PlatWithdrawal" >
    update t_pay_withdraw_config
    set cid = #{cid,jdbcType=INTEGER},
      company_pay_prop = #{companyPayProp,jdbcType=REAL},
      gift_bonus_prop = #{giftBonusProp,jdbcType=REAL},
      gift_bonus_limit = #{giftBonusLimit,jdbcType=INTEGER},
      dama = #{dama,jdbcType=REAL},
      free_withdraw_time = #{freeWithdrawTime,jdbcType=INTEGER},
      withdraw_fee = #{withdrawFee,jdbcType=REAL},
      withdraw_manage_fee = #{withdrawManageFee,jdbcType=INTEGER},
      compulsory_withdrawal_fee = #{compulsoryWithdrawalFee,jdbcType=REAL},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      uid = #{uid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAllByPage" resultMap="BaseResultMap"  parameterType="com.cn.tianxia.admin.common.Pager" >
    select 
    <include refid="Base_Column_List" />
    from t_pay_withdraw_config
    <where>
	    <if test="params.containsKey('cid')">
	    	 cid = #{params.cid}
	    </if>
    </where>
    ORDER BY id DESC
    <if test="page != null and limit != null">
	    LIMIT ${(page-1)*limit},#{limit}
    </if>
  </select>
  <select id="getPlatWithdrawalTotalCounts" resultType="java.lang.Integer" parameterType="com.cn.tianxia.admin.common.Pager" >
    select 
    	count(1)
    from t_pay_withdraw_config 
    <where>
	    <if test="params.containsKey('cid')">
	    	 cid = #{params.cid}
	    </if>
    </where>
  </select>
  
  <select id="selectByCid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select 
    <include refid="Base_Column_List" />
    from t_pay_withdraw_config
    where cid = #{cid,jdbcType=INTEGER}
  </select>
</mapper>