<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.tianxia.admin.domain.ftpdata.AgBrMapper" >
  <resultMap id="BaseResultMap" type="com.cn.tianxia.admin.project.ftpdata.AgBr" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="billNo" property="billno" jdbcType="VARCHAR" />
    <result column="playerName" property="playername" jdbcType="VARCHAR" />
    <result column="agentCode" property="agentcode" jdbcType="VARCHAR" />
    <result column="gameCode" property="gamecode" jdbcType="VARCHAR" />
    <result column="netAmount" property="netamount" jdbcType="REAL" />
    <result column="betTime" property="bettime" jdbcType="TIMESTAMP" />
    <result column="gameType" property="gametype" jdbcType="VARCHAR" />
    <result column="betAmount" property="betamount" jdbcType="REAL" />
    <result column="validBetAmount" property="validbetamount" jdbcType="REAL" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="playType" property="playtype" jdbcType="VARCHAR" />
    <result column="currency" property="currency" jdbcType="VARCHAR" />
    <result column="tableCode" property="tablecode" jdbcType="VARCHAR" />
    <result column="loginIP" property="loginip" jdbcType="VARCHAR" />
    <result column="recalcuTime" property="recalcutime" jdbcType="TIMESTAMP" />
    <result column="platformId" property="platformid" jdbcType="VARCHAR" />
    <result column="platformType" property="platformtype" jdbcType="VARCHAR" />
    <result column="stringex" property="stringex" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="round" property="round" jdbcType="VARCHAR" />
    <result column="dataType" property="datatype" jdbcType="VARCHAR" />
    <result column="cagent" property="cagent" jdbcType="VARCHAR" />
    <result column="pull_ime" property="pullIme" jdbcType="TIMESTAMP" />
    <result column="bankerPoint" property="bankerpoint" jdbcType="VARCHAR" />
    <result column="playerpoint" property="playerpoint" jdbcType="VARCHAR" />
    <result column="dragonpoint" property="dragonpoint" jdbcType="VARCHAR" />
    <result column="tigerpoint" property="tigerpoint" jdbcType="VARCHAR" />
    <result column="is_update" property="isUpdate" jdbcType="TINYINT" />
    <result column="cardlist" property="cardlist" jdbcType="VARCHAR" />
    <result column="realGameType" property="realgametype" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, billNo, playerName, agentCode, gameCode, netAmount, betTime, gameType, betAmount, 
    validBetAmount, flag, playType, currency, tableCode, loginIP, recalcuTime, platformId, 
    platformType, stringex, remark, round, dataType, cagent, pull_ime, bankerPoint, playerpoint, 
    dragonpoint, tigerpoint, is_update, cardlist, realGameType
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ag_br
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ag_br
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.tianxia.admin.project.ftpdata.AgBr" >
    insert into ag_br (id, billNo, playerName, 
      agentCode, gameCode, netAmount, 
      betTime, gameType, betAmount, 
      validBetAmount, flag, playType, 
      currency, tableCode, loginIP, 
      recalcuTime, platformId, platformType, 
      stringex, remark, round, 
      dataType, cagent, pull_ime, 
      bankerPoint, playerpoint, dragonpoint, 
      tigerpoint, is_update, cardlist, 
      realGameType)
    values (#{id,jdbcType=INTEGER}, #{billno,jdbcType=VARCHAR}, #{playername,jdbcType=VARCHAR}, 
      #{agentcode,jdbcType=VARCHAR}, #{gamecode,jdbcType=VARCHAR}, #{netamount,jdbcType=REAL}, 
      #{bettime,jdbcType=TIMESTAMP}, #{gametype,jdbcType=VARCHAR}, #{betamount,jdbcType=REAL}, 
      #{validbetamount,jdbcType=REAL}, #{flag,jdbcType=VARCHAR}, #{playtype,jdbcType=VARCHAR}, 
      #{currency,jdbcType=VARCHAR}, #{tablecode,jdbcType=VARCHAR}, #{loginip,jdbcType=VARCHAR}, 
      #{recalcutime,jdbcType=TIMESTAMP}, #{platformid,jdbcType=VARCHAR}, #{platformtype,jdbcType=VARCHAR}, 
      #{stringex,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{round,jdbcType=VARCHAR}, 
      #{datatype,jdbcType=VARCHAR}, #{cagent,jdbcType=VARCHAR}, #{pullIme,jdbcType=TIMESTAMP}, 
      #{bankerpoint,jdbcType=VARCHAR}, #{playerpoint,jdbcType=VARCHAR}, #{dragonpoint,jdbcType=VARCHAR}, 
      #{tigerpoint,jdbcType=VARCHAR}, #{isUpdate,jdbcType=TINYINT}, #{cardlist,jdbcType=VARCHAR}, 
      #{realgametype,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.cn.tianxia.admin.project.ftpdata.AgBr" >
    insert into ag_br
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="billno != null" >
        billNo,
      </if>
      <if test="playername != null" >
        playerName,
      </if>
      <if test="agentcode != null" >
        agentCode,
      </if>
      <if test="gamecode != null" >
        gameCode,
      </if>
      <if test="netamount != null" >
        netAmount,
      </if>
      <if test="bettime != null" >
        betTime,
      </if>
      <if test="gametype != null" >
        gameType,
      </if>
      <if test="betamount != null" >
        betAmount,
      </if>
      <if test="validbetamount != null" >
        validBetAmount,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="playtype != null" >
        playType,
      </if>
      <if test="currency != null" >
        currency,
      </if>
      <if test="tablecode != null" >
        tableCode,
      </if>
      <if test="loginip != null" >
        loginIP,
      </if>
      <if test="recalcutime != null" >
        recalcuTime,
      </if>
      <if test="platformid != null" >
        platformId,
      </if>
      <if test="platformtype != null" >
        platformType,
      </if>
      <if test="stringex != null" >
        stringex,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="round != null" >
        round,
      </if>
      <if test="datatype != null" >
        dataType,
      </if>
      <if test="cagent != null" >
        cagent,
      </if>
      <if test="pullIme != null" >
        pull_ime,
      </if>
      <if test="bankerpoint != null" >
        bankerPoint,
      </if>
      <if test="playerpoint != null" >
        playerpoint,
      </if>
      <if test="dragonpoint != null" >
        dragonpoint,
      </if>
      <if test="tigerpoint != null" >
        tigerpoint,
      </if>
      <if test="isUpdate != null" >
        is_update,
      </if>
      <if test="cardlist != null" >
        cardlist,
      </if>
      <if test="realgametype != null" >
        realGameType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="billno != null" >
        #{billno,jdbcType=VARCHAR},
      </if>
      <if test="playername != null" >
        #{playername,jdbcType=VARCHAR},
      </if>
      <if test="agentcode != null" >
        #{agentcode,jdbcType=VARCHAR},
      </if>
      <if test="gamecode != null" >
        #{gamecode,jdbcType=VARCHAR},
      </if>
      <if test="netamount != null" >
        #{netamount,jdbcType=REAL},
      </if>
      <if test="bettime != null" >
        #{bettime,jdbcType=TIMESTAMP},
      </if>
      <if test="gametype != null" >
        #{gametype,jdbcType=VARCHAR},
      </if>
      <if test="betamount != null" >
        #{betamount,jdbcType=REAL},
      </if>
      <if test="validbetamount != null" >
        #{validbetamount,jdbcType=REAL},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="playtype != null" >
        #{playtype,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="tablecode != null" >
        #{tablecode,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null" >
        #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="recalcutime != null" >
        #{recalcutime,jdbcType=TIMESTAMP},
      </if>
      <if test="platformid != null" >
        #{platformid,jdbcType=VARCHAR},
      </if>
      <if test="platformtype != null" >
        #{platformtype,jdbcType=VARCHAR},
      </if>
      <if test="stringex != null" >
        #{stringex,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="round != null" >
        #{round,jdbcType=VARCHAR},
      </if>
      <if test="datatype != null" >
        #{datatype,jdbcType=VARCHAR},
      </if>
      <if test="cagent != null" >
        #{cagent,jdbcType=VARCHAR},
      </if>
      <if test="pullIme != null" >
        #{pullIme,jdbcType=TIMESTAMP},
      </if>
      <if test="bankerpoint != null" >
        #{bankerpoint,jdbcType=VARCHAR},
      </if>
      <if test="playerpoint != null" >
        #{playerpoint,jdbcType=VARCHAR},
      </if>
      <if test="dragonpoint != null" >
        #{dragonpoint,jdbcType=VARCHAR},
      </if>
      <if test="tigerpoint != null" >
        #{tigerpoint,jdbcType=VARCHAR},
      </if>
      <if test="isUpdate != null" >
        #{isUpdate,jdbcType=TINYINT},
      </if>
      <if test="cardlist != null" >
        #{cardlist,jdbcType=VARCHAR},
      </if>
      <if test="realgametype != null" >
        #{realgametype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.tianxia.admin.project.ftpdata.AgBr" >
    update ag_br
    <set >
      <if test="billno != null" >
        billNo = #{billno,jdbcType=VARCHAR},
      </if>
      <if test="playername != null" >
        playerName = #{playername,jdbcType=VARCHAR},
      </if>
      <if test="agentcode != null" >
        agentCode = #{agentcode,jdbcType=VARCHAR},
      </if>
      <if test="gamecode != null" >
        gameCode = #{gamecode,jdbcType=VARCHAR},
      </if>
      <if test="netamount != null" >
        netAmount = #{netamount,jdbcType=REAL},
      </if>
      <if test="bettime != null" >
        betTime = #{bettime,jdbcType=TIMESTAMP},
      </if>
      <if test="gametype != null" >
        gameType = #{gametype,jdbcType=VARCHAR},
      </if>
      <if test="betamount != null" >
        betAmount = #{betamount,jdbcType=REAL},
      </if>
      <if test="validbetamount != null" >
        validBetAmount = #{validbetamount,jdbcType=REAL},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="playtype != null" >
        playType = #{playtype,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="tablecode != null" >
        tableCode = #{tablecode,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null" >
        loginIP = #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="recalcutime != null" >
        recalcuTime = #{recalcutime,jdbcType=TIMESTAMP},
      </if>
      <if test="platformid != null" >
        platformId = #{platformid,jdbcType=VARCHAR},
      </if>
      <if test="platformtype != null" >
        platformType = #{platformtype,jdbcType=VARCHAR},
      </if>
      <if test="stringex != null" >
        stringex = #{stringex,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="round != null" >
        round = #{round,jdbcType=VARCHAR},
      </if>
      <if test="datatype != null" >
        dataType = #{datatype,jdbcType=VARCHAR},
      </if>
      <if test="cagent != null" >
        cagent = #{cagent,jdbcType=VARCHAR},
      </if>
      <if test="pullIme != null" >
        pull_ime = #{pullIme,jdbcType=TIMESTAMP},
      </if>
      <if test="bankerpoint != null" >
        bankerPoint = #{bankerpoint,jdbcType=VARCHAR},
      </if>
      <if test="playerpoint != null" >
        playerpoint = #{playerpoint,jdbcType=VARCHAR},
      </if>
      <if test="dragonpoint != null" >
        dragonpoint = #{dragonpoint,jdbcType=VARCHAR},
      </if>
      <if test="tigerpoint != null" >
        tigerpoint = #{tigerpoint,jdbcType=VARCHAR},
      </if>
      <if test="isUpdate != null" >
        is_update = #{isUpdate,jdbcType=TINYINT},
      </if>
      <if test="cardlist != null" >
        cardlist = #{cardlist,jdbcType=VARCHAR},
      </if>
      <if test="realgametype != null" >
        realGameType = #{realgametype,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.tianxia.admin.project.ftpdata.AgBr" >
    update ag_br
    set billNo = #{billno,jdbcType=VARCHAR},
      playerName = #{playername,jdbcType=VARCHAR},
      agentCode = #{agentcode,jdbcType=VARCHAR},
      gameCode = #{gamecode,jdbcType=VARCHAR},
      netAmount = #{netamount,jdbcType=REAL},
      betTime = #{bettime,jdbcType=TIMESTAMP},
      gameType = #{gametype,jdbcType=VARCHAR},
      betAmount = #{betamount,jdbcType=REAL},
      validBetAmount = #{validbetamount,jdbcType=REAL},
      flag = #{flag,jdbcType=VARCHAR},
      playType = #{playtype,jdbcType=VARCHAR},
      currency = #{currency,jdbcType=VARCHAR},
      tableCode = #{tablecode,jdbcType=VARCHAR},
      loginIP = #{loginip,jdbcType=VARCHAR},
      recalcuTime = #{recalcutime,jdbcType=TIMESTAMP},
      platformId = #{platformid,jdbcType=VARCHAR},
      platformType = #{platformtype,jdbcType=VARCHAR},
      stringex = #{stringex,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      round = #{round,jdbcType=VARCHAR},
      dataType = #{datatype,jdbcType=VARCHAR},
      cagent = #{cagent,jdbcType=VARCHAR},
      pull_ime = #{pullIme,jdbcType=TIMESTAMP},
      bankerPoint = #{bankerpoint,jdbcType=VARCHAR},
      playerpoint = #{playerpoint,jdbcType=VARCHAR},
      dragonpoint = #{dragonpoint,jdbcType=VARCHAR},
      tigerpoint = #{tigerpoint,jdbcType=VARCHAR},
      is_update = #{isUpdate,jdbcType=TINYINT},
      cardlist = #{cardlist,jdbcType=VARCHAR},
      realGameType = #{realgametype,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
<!-- add by gate -->
  <select id="listGameRecord" parameterType="com.cn.tianxia.admin.common.Pager" resultMap="BaseResultMap">
  	<choose>
  		<!-- 如果用户分组为0 则执行此sql -->
  		<when test="params.userGrouping == 0">
  			select 
		  		<include refid="Base_Column_List" /> 
		  	from ag_br force index(un_Time_Type)
			where betTime BETWEEN #{params.startTime} and #{params.endTime}
			<if test="params.cagentName != null and params.cagentName.length() != 0">
				and cagent = #{params.cagentName}
			</if>
			<if test="params.gamePlatFormName != null and params.gamePlatFormName.length() != 0">
		  		and platformType = #{params.gamePlatFormName}
			</if>
			<choose>
				<!-- 按真实姓名查询  or 按代理商查询  or 按会员分层查询查询  -->
				<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
					<if test="params.userName != null and params.userName.length() != 0">
						and playerName in ${params.userName}
					</if>
				</when>
				<otherwise>
					<!-- 如果有输入值 -->
					<if test="params.name != null and params.name.length() != 0">
				  		and playerName = #{params.name}
					</if>
				</otherwise>
			</choose>
			ORDER BY betTime desc 
			limit
			${(page-1)*limit},
			#{limit,jdbcType=INTEGER};
  		</when>
  		<otherwise>
  			select playerName,
	  			count(playerName) as id,
	  			sum(betAmount) as betAmount,
	  			sum(netAmount) as netAmount,
	  			sum(validBetamount) as validBetamount,
	  			cast(sum(if(validBetamount > 0, 1 ,0)) as char) as round
  			from ag_br force index(un_Time_Type)
  			where betTime BETWEEN #{params.startTime} and #{params.endTime}
  			<if test="params.cagentName != null and params.cagentName.length() != 0">
				and cagent = #{params.cagentName,jdbcType=VARCHAR}
			</if>
			<if test="params.gamePlatFormName != null and params.gamePlatFormName.length() != 0">
		  		and platformType = #{params.gamePlatFormName,jdbcType=VARCHAR}
			</if>
			<choose>
				<!-- 按真实姓名查询  or 按代理商查询  or 按会员分层查询查询  -->
				<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
					<if test="params.userName != null and params.userName.length() != 0">
						and playerName in ${params.userName}
					</if>
				</when>
				<otherwise>
					<!-- 如果有输入值 -->
					<if test="params.name != null and params.name.length() != 0">
				  		and playerName = #{params.name}
					</if>
				</otherwise>
			</choose>
			GROUP BY playerName
			limit
			${(page-1)*limit},
			#{limit,jdbcType=INTEGER};
  		</otherwise>
  	</choose>
  </select>
  
  <select id="countTotal" parameterType="com.cn.tianxia.admin.common.Pager" resultType="java.util.Map">
  	<choose>
  		<!-- gamePlatFormName 不为空 需要走明细表 表示选择了ag国际或者ag视讯,勾选了实时分页也需要走明细-->
  		<when test="(params.gamePlatFormName != null and params.gamePlatFormName.length() != 0)
  						or (params.dateGrouping != 0)">
  			select 'total' as userName,
		  		count(id) as noteNum,
				sum(abs(betAmount)) as betAmount,
				sum(netAmount) AS netAmount,
				sum(abs(validBetAmount)) as validBetAmount,
				sum(if(validBetamount > 0,1,0)) as validNoteNum
		  	from ag_br force index(un_Time_Type)
			where betTime BETWEEN #{params.startTime} and #{params.endTime}
			<if test="params.cagentName != null and params.cagentName.length() != 0">
				and cagent = #{params.cagentName,jdbcType=VARCHAR}
			</if>
			<if test="params.gamePlatFormName != null and params.gamePlatFormName.length() != 0">
		  		and platformType = #{params.gamePlatFormName,jdbcType=VARCHAR}
			</if>
			<choose>
				<!-- 按真实姓名查询  or 按代理商查询 or 按会员分层查询查询-->
				<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
					<if test="params.userNames != null and params.userNames.length() != 0">
						and playerName in ${params.userNames}
					</if>
				</when>
				<!-- 按会员账号查询 -->
				<otherwise>
					<!-- 如果有输入值 -->
					<if test="params.name != null and params.name.length() != 0">
				  		and playerName = #{params.name}
					</if>
				</otherwise>
			</choose>
  		</when>
  		<otherwise>
  			select user_name as userName,
		  		sum(note_num) as noteNum,
		  		sum(bet_amount) as betAmount,
		  		sum(net_amount) as netAmount,
		  		sum(valid_bet_amount) as validBetAmount,
		  		sum(valid_note_num) as validNoteNum
		  	from ag_platform_report
		  	where bet_time BETWEEN #{params.nextStartDay} and #{params.lastEndDay}
		  		and type = 0
				<if test="params.cagentName != null and params.cagentName.length() != 0">
					and cagent = #{params.cagentName}
				</if>
				<choose>
					<!-- 按真实姓名查询 or 按代理商查询  or 按会员分层查询查询-->
					<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
						<if test="params.userNames != null and params.userNames.length() != 0">
							and user_name in ${params.userNames}
						</if>
					</when>
					<!-- 按会员账号查询 -->
					<otherwise>
						<!-- 如果有输入值 -->
						<if test="params.name != null and params.name.length() != 0">
					  		and user_name = #{params.name}
						</if>
					</otherwise>
				</choose>
				group by userName
				<if test="params.startTime1 != null and params.startTime1.length() != 0">
					union all
					select playerName as userName,
						count(id) as noteNum,
						sum(abs(betAmount)) as betAmount,
						sum(netAmount) AS netAmount,
						sum(abs(validBetAmount)) as validBetAmount,
						sum(if(validBetamount > 0,1,0)) as validNoteNum
					from ag_br 
					where betTime BETWEEN #{params.startTime} and #{params.startTime1}
					<if test="params.cagentName != null and params.cagentName.length() != 0">
						and cagent = #{params.cagentName,jdbcType=VARCHAR}
					</if>
					<choose>
						<!-- 按真实姓名查询 or 按代理商查询 or按会员分层查询查询  -->
						<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
							<if test="params.userNames != null and params.userNames.length() != 0">
								and playerName in ${params.userNames}
							</if>
						</when>
						<!-- 按会员账号查询 -->
						<otherwise>
							<!-- 如果有输入值 -->
							<if test="params.name != null and params.name.length() != 0">
						  		and playerName = #{params.name}
							</if>
						</otherwise>
					</choose>
					group by userName
				</if>
				<if test="params.endTime1 != null and params.endTime1.length() != 0">
					union all
					select playerName as userName,
						count(id) as noteNum,
						sum(abs(betAmount)) as betAmount,
						sum(netAmount) AS netAmount,
						sum(abs(validBetAmount)) as validBetAmount,
						sum(if(validBetamount > 0,1,0)) as validNoteNum
					from ag_br 
					where betTime BETWEEN #{params.endTime1} and #{params.endTime}
					<if test="params.cagentName != null and params.cagentName.length() != 0">
						and cagent = #{params.cagentName,jdbcType=VARCHAR}
					</if>
					<choose>
						<!-- 按真实姓名查询 or 按代理商查询 or按会员分层查询查询  -->
						<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
							<if test="params.userNames != null and params.userNames.length() != 0">
								and playerName in ${params.userNames}
							</if>
						</when>
						<!-- 按会员账号查询 -->
						<otherwise>
							<!-- 如果有输入值 -->
							<if test="params.name != null and params.name.length() != 0">
						  		and playerName = #{params.name}
							</if>
						</otherwise>
					</choose>
					group by userName
				</if>
  		</otherwise>
  	</choose>
  </select>
</mapper>