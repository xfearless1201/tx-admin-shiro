<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.tianxia.admin.domain.ftpdata.OgRecordMapper" >
  <resultMap id="BaseResultMap" type="com.cn.tianxia.admin.project.ftpdata.OgRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ProductID" property="productid" jdbcType="INTEGER" />
    <result column="UserName" property="username" jdbcType="VARCHAR" />
    <result column="TableID" property="tableid" jdbcType="INTEGER" />
    <result column="Stage" property="stage" jdbcType="INTEGER" />
    <result column="Inning" property="inning" jdbcType="INTEGER" />
    <result column="GameResult" property="gameresult" jdbcType="VARCHAR" />
    <result column="GameRecordID" property="gamerecordid" jdbcType="INTEGER" />
    <result column="OrderNumber" property="ordernumber" jdbcType="INTEGER" />
    <result column="GameBettingKind" property="gamebettingkind" jdbcType="INTEGER" />
    <result column="GameBettingContent" property="gamebettingcontent" jdbcType="INTEGER" />
    <result column="ResultType" property="resulttype" jdbcType="INTEGER" />
    <result column="GameInformation" property="gameinformation" jdbcType="VARCHAR" />
    <result column="GameNameID" property="gamenameid" jdbcType="INTEGER" />
    <result column="BettingAmount" property="bettingamount" jdbcType="REAL" />
    <result column="CompensateRate" property="compensaterate" jdbcType="REAL" />
    <result column="WinLoseAmount" property="winloseamount" jdbcType="REAL" />
    <result column="Balance" property="balance" jdbcType="REAL" />
    <result column="AddTime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="VendorId" property="vendorid" jdbcType="VARCHAR" />
    <result column="ValidAmount" property="validamount" jdbcType="REAL" />
    <result column="GameKind" property="gamekind" jdbcType="INTEGER" />
    <result column="PlatformID" property="platformid" jdbcType="INTEGER" />
    <result column="cagent" property="cagent" jdbcType="VARCHAR" />
    <result column="pull_time" property="pullTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, ProductID, UserName, TableID, Stage, Inning, GameResult, GameRecordID, OrderNumber, 
    GameBettingKind, GameBettingContent, ResultType, GameInformation, GameNameID, BettingAmount, 
    CompensateRate, WinLoseAmount, Balance, AddTime, VendorId, ValidAmount, GameKind, 
    PlatformID, cagent, pull_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from og_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from og_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.tianxia.admin.project.ftpdata.OgRecord" >
    insert into og_record (id, ProductID, UserName, 
      TableID, Stage, Inning, 
      GameResult, GameRecordID, OrderNumber, 
      GameBettingKind, GameBettingContent, ResultType, 
      GameInformation, GameNameID, BettingAmount, 
      CompensateRate, WinLoseAmount, Balance, 
      AddTime, VendorId, ValidAmount, 
      GameKind, PlatformID, cagent, 
      pull_time)
    values (#{id,jdbcType=INTEGER}, #{productid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{tableid,jdbcType=INTEGER}, #{stage,jdbcType=INTEGER}, #{inning,jdbcType=INTEGER}, 
      #{gameresult,jdbcType=VARCHAR}, #{gamerecordid,jdbcType=INTEGER}, #{ordernumber,jdbcType=INTEGER}, 
      #{gamebettingkind,jdbcType=INTEGER}, #{gamebettingcontent,jdbcType=INTEGER}, #{resulttype,jdbcType=INTEGER}, 
      #{gameinformation,jdbcType=VARCHAR}, #{gamenameid,jdbcType=INTEGER}, #{bettingamount,jdbcType=REAL}, 
      #{compensaterate,jdbcType=REAL}, #{winloseamount,jdbcType=REAL}, #{balance,jdbcType=REAL}, 
      #{addtime,jdbcType=TIMESTAMP}, #{vendorid,jdbcType=VARCHAR}, #{validamount,jdbcType=REAL}, 
      #{gamekind,jdbcType=INTEGER}, #{platformid,jdbcType=INTEGER}, #{cagent,jdbcType=VARCHAR}, 
      #{pullTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.tianxia.admin.project.ftpdata.OgRecord" >
    insert into og_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productid != null" >
        ProductID,
      </if>
      <if test="username != null" >
        UserName,
      </if>
      <if test="tableid != null" >
        TableID,
      </if>
      <if test="stage != null" >
        Stage,
      </if>
      <if test="inning != null" >
        Inning,
      </if>
      <if test="gameresult != null" >
        GameResult,
      </if>
      <if test="gamerecordid != null" >
        GameRecordID,
      </if>
      <if test="ordernumber != null" >
        OrderNumber,
      </if>
      <if test="gamebettingkind != null" >
        GameBettingKind,
      </if>
      <if test="gamebettingcontent != null" >
        GameBettingContent,
      </if>
      <if test="resulttype != null" >
        ResultType,
      </if>
      <if test="gameinformation != null" >
        GameInformation,
      </if>
      <if test="gamenameid != null" >
        GameNameID,
      </if>
      <if test="bettingamount != null" >
        BettingAmount,
      </if>
      <if test="compensaterate != null" >
        CompensateRate,
      </if>
      <if test="winloseamount != null" >
        WinLoseAmount,
      </if>
      <if test="balance != null" >
        Balance,
      </if>
      <if test="addtime != null" >
        AddTime,
      </if>
      <if test="vendorid != null" >
        VendorId,
      </if>
      <if test="validamount != null" >
        ValidAmount,
      </if>
      <if test="gamekind != null" >
        GameKind,
      </if>
      <if test="platformid != null" >
        PlatformID,
      </if>
      <if test="cagent != null" >
        cagent,
      </if>
      <if test="pullTime != null" >
        pull_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productid != null" >
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="tableid != null" >
        #{tableid,jdbcType=INTEGER},
      </if>
      <if test="stage != null" >
        #{stage,jdbcType=INTEGER},
      </if>
      <if test="inning != null" >
        #{inning,jdbcType=INTEGER},
      </if>
      <if test="gameresult != null" >
        #{gameresult,jdbcType=VARCHAR},
      </if>
      <if test="gamerecordid != null" >
        #{gamerecordid,jdbcType=INTEGER},
      </if>
      <if test="ordernumber != null" >
        #{ordernumber,jdbcType=INTEGER},
      </if>
      <if test="gamebettingkind != null" >
        #{gamebettingkind,jdbcType=INTEGER},
      </if>
      <if test="gamebettingcontent != null" >
        #{gamebettingcontent,jdbcType=INTEGER},
      </if>
      <if test="resulttype != null" >
        #{resulttype,jdbcType=INTEGER},
      </if>
      <if test="gameinformation != null" >
        #{gameinformation,jdbcType=VARCHAR},
      </if>
      <if test="gamenameid != null" >
        #{gamenameid,jdbcType=INTEGER},
      </if>
      <if test="bettingamount != null" >
        #{bettingamount,jdbcType=REAL},
      </if>
      <if test="compensaterate != null" >
        #{compensaterate,jdbcType=REAL},
      </if>
      <if test="winloseamount != null" >
        #{winloseamount,jdbcType=REAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=REAL},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="vendorid != null" >
        #{vendorid,jdbcType=VARCHAR},
      </if>
      <if test="validamount != null" >
        #{validamount,jdbcType=REAL},
      </if>
      <if test="gamekind != null" >
        #{gamekind,jdbcType=INTEGER},
      </if>
      <if test="platformid != null" >
        #{platformid,jdbcType=INTEGER},
      </if>
      <if test="cagent != null" >
        #{cagent,jdbcType=VARCHAR},
      </if>
      <if test="pullTime != null" >
        #{pullTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.tianxia.admin.project.ftpdata.OgRecord" >
    update og_record
    <set >
      <if test="productid != null" >
        ProductID = #{productid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="tableid != null" >
        TableID = #{tableid,jdbcType=INTEGER},
      </if>
      <if test="stage != null" >
        Stage = #{stage,jdbcType=INTEGER},
      </if>
      <if test="inning != null" >
        Inning = #{inning,jdbcType=INTEGER},
      </if>
      <if test="gameresult != null" >
        GameResult = #{gameresult,jdbcType=VARCHAR},
      </if>
      <if test="gamerecordid != null" >
        GameRecordID = #{gamerecordid,jdbcType=INTEGER},
      </if>
      <if test="ordernumber != null" >
        OrderNumber = #{ordernumber,jdbcType=INTEGER},
      </if>
      <if test="gamebettingkind != null" >
        GameBettingKind = #{gamebettingkind,jdbcType=INTEGER},
      </if>
      <if test="gamebettingcontent != null" >
        GameBettingContent = #{gamebettingcontent,jdbcType=INTEGER},
      </if>
      <if test="resulttype != null" >
        ResultType = #{resulttype,jdbcType=INTEGER},
      </if>
      <if test="gameinformation != null" >
        GameInformation = #{gameinformation,jdbcType=VARCHAR},
      </if>
      <if test="gamenameid != null" >
        GameNameID = #{gamenameid,jdbcType=INTEGER},
      </if>
      <if test="bettingamount != null" >
        BettingAmount = #{bettingamount,jdbcType=REAL},
      </if>
      <if test="compensaterate != null" >
        CompensateRate = #{compensaterate,jdbcType=REAL},
      </if>
      <if test="winloseamount != null" >
        WinLoseAmount = #{winloseamount,jdbcType=REAL},
      </if>
      <if test="balance != null" >
        Balance = #{balance,jdbcType=REAL},
      </if>
      <if test="addtime != null" >
        AddTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="vendorid != null" >
        VendorId = #{vendorid,jdbcType=VARCHAR},
      </if>
      <if test="validamount != null" >
        ValidAmount = #{validamount,jdbcType=REAL},
      </if>
      <if test="gamekind != null" >
        GameKind = #{gamekind,jdbcType=INTEGER},
      </if>
      <if test="platformid != null" >
        PlatformID = #{platformid,jdbcType=INTEGER},
      </if>
      <if test="cagent != null" >
        cagent = #{cagent,jdbcType=VARCHAR},
      </if>
      <if test="pullTime != null" >
        pull_time = #{pullTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.tianxia.admin.project.ftpdata.OgRecord" >
    update og_record
    set ProductID = #{productid,jdbcType=INTEGER},
      UserName = #{username,jdbcType=VARCHAR},
      TableID = #{tableid,jdbcType=INTEGER},
      Stage = #{stage,jdbcType=INTEGER},
      Inning = #{inning,jdbcType=INTEGER},
      GameResult = #{gameresult,jdbcType=VARCHAR},
      GameRecordID = #{gamerecordid,jdbcType=INTEGER},
      OrderNumber = #{ordernumber,jdbcType=INTEGER},
      GameBettingKind = #{gamebettingkind,jdbcType=INTEGER},
      GameBettingContent = #{gamebettingcontent,jdbcType=INTEGER},
      ResultType = #{resulttype,jdbcType=INTEGER},
      GameInformation = #{gameinformation,jdbcType=VARCHAR},
      GameNameID = #{gamenameid,jdbcType=INTEGER},
      BettingAmount = #{bettingamount,jdbcType=REAL},
      CompensateRate = #{compensaterate,jdbcType=REAL},
      WinLoseAmount = #{winloseamount,jdbcType=REAL},
      Balance = #{balance,jdbcType=REAL},
      AddTime = #{addtime,jdbcType=TIMESTAMP},
      VendorId = #{vendorid,jdbcType=VARCHAR},
      ValidAmount = #{validamount,jdbcType=REAL},
      GameKind = #{gamekind,jdbcType=INTEGER},
      PlatformID = #{platformid,jdbcType=INTEGER},
      cagent = #{cagent,jdbcType=VARCHAR},
      pull_time = #{pullTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <!-- add by gate -->  
  <select id="listGameRecord" parameterType="com.cn.tianxia.admin.common.Pager" resultMap="BaseResultMap">
  	<choose>
  		<!-- 如果用户分组为0 则执行此sql -->
  		<when test="params.userGrouping == 0">
  			select 
		  		<include refid="Base_Column_List" /> 
		  	from og_record force index(AddTime)
			where AddTime BETWEEN #{params.startTime} and #{params.endTime}
			<if test="params.cagentName != null and params.cagentName.length() != 0">
				and cagent = #{params.cagentName}
			</if>
			<choose>
				<!-- 按真实姓名查询  or 按代理商查询  or 按会员分层查询查询  -->
				<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
					<if test="params.userName != null and params.userName.length() != 0">
						and UserName in ${params.userName}
					</if>
				</when>
				<otherwise>
					<!-- 如果有输入值 -->
					<if test="params.name != null and params.name.length() != 0">
				  		and UserName = #{params.name}
					</if>
				</otherwise>
			</choose>
			ORDER BY AddTime desc 
			limit
			${(page-1)*limit},
			#{limit,jdbcType=INTEGER};
  		</when>
  		<otherwise>
  			select UserName,
	  			count(UserName) as id,
	  			sum(abs(BettingAmount)) as BettingAmount,
				sum(WinLoseAmount) AS WinLoseAmount,
				sum(abs(ValidAmount)) as ValidAmount,
	  			sum(if(ValidAmount > 0, 1 ,0)) as ProductID
  			from og_record force index(AddTime)
  			where AddTime BETWEEN #{params.startTime} and #{params.endTime}
  			<if test="params.cagentName != null and params.cagentName.length() != 0">
				and cagent = #{params.cagentName,jdbcType=VARCHAR}
			</if>
			<choose>
				<!-- 按真实姓名查询  or 按代理商查询  or 按会员分层查询查询  -->
				<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
					<if test="params.userName != null and params.userName.length() != 0">
						and UserName in ${params.userName}
					</if>
				</when>
				<otherwise>
					<!-- 如果有输入值 -->
					<if test="params.name != null and params.name.length() != 0">
				  		and UserName = #{params.name}
					</if>
				</otherwise>
			</choose>
			GROUP BY UserName
			limit
			${(page-1)*limit},
			#{limit,jdbcType=INTEGER};
  		</otherwise>
  	</choose>
  </select> 
  
  <select id="countTotal" parameterType="com.cn.tianxia.admin.common.Pager" resultType="java.util.Map">
  	<choose>
  		<!-- 勾选了实时分页也需要走明细-->
  		<when test="params.dateGrouping == 1">
  			select 'total' as userName,
		  		count(id) as noteNum,
	  			sum(abs(BettingAmount)) as betAmount,
				sum(WinLoseAmount) AS netAmount,
				sum(abs(ValidAmount)) as validBetAmount,
	  			sum(if(ValidAmount > 0, 1 ,0)) as validNoteNum
		  	from og_record force index(AddTime)
			where AddTime BETWEEN #{params.startTime} and #{params.endTime}
			<if test="params.cagentName != null and params.cagentName.length() != 0">
				and cagent = #{params.cagentName,jdbcType=VARCHAR}
			</if>
			<choose>
				<!-- 按真实姓名查询  or 按代理商查询 or 按会员分层查询查询-->
				<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
					<if test="params.userNames != null and params.userNames.length() != 0">
						and UserName in ${params.userNames}
					</if>
				</when>
				<!-- 按会员账号查询 -->
				<otherwise>
					<!-- 如果有输入值 -->
					<if test="params.name != null and params.name.length() != 0">
				  		and UserName = #{params.name}
					</if>
				</otherwise>
			</choose>
  		</when>
  		<otherwise>
  			select user_name as userName,
		  		sum(note_num) as noteNum,
		  		sum(bet_amount) as betAmount,
		  		sum(net_amount) as netAmount,
		  		sum(valid_bet_amount) as validBetAmount,
		  		sum(valid_note_num) as validNoteNum
		  	from og_platform_report
		  	where bet_time BETWEEN #{params.nextStartDay} and #{params.lastEndDay}
				<if test="params.cagentName != null and params.cagentName.length() != 0">
					and cagent = #{params.cagentName}
				</if>
				<choose>
					<!-- 按真实姓名查询 or 按代理商查询  or 按会员分层查询查询-->
					<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
						<if test="params.userNames != null and params.userNames.length() != 0">
							and user_name in ${params.userNames}
						</if>
					</when>
					<!-- 按会员账号查询 -->
					<otherwise>
						<!-- 如果有输入值 -->
						<if test="params.name != null and params.name.length() != 0">
					  		and user_name = #{params.name}
						</if>
					</otherwise>
				</choose>
				group by userName
				<if test="params.startTime1 != null and params.startTime1.length() != 0">
					union all
					select UserName as userName,
						count(id) as noteNum,
			  			sum(abs(BettingAmount)) as betAmount,
						sum(WinLoseAmount) AS netAmount,
						sum(abs(ValidAmount)) as validBetAmount,
			  			sum(if(ValidAmount > 0, 1 ,0)) as validNoteNum
					from og_record 
					where AddTime BETWEEN #{params.startTime} and #{params.startTime1}
					<if test="params.cagentName != null and params.cagentName.length() != 0">
						and cagent = #{params.cagentName,jdbcType=VARCHAR}
					</if>
					<choose>
						<!-- 按真实姓名查询 or 按代理商查询 or按会员分层查询查询  -->
						<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
							<if test="params.userNames != null and params.userNames.length() != 0">
								and UserName in ${params.userNames}
							</if>
						</when>
						<!-- 按会员账号查询 -->
						<otherwise>
							<!-- 如果有输入值 -->
							<if test="params.name != null and params.name.length() != 0">
						  		and UserName = #{params.name}
							</if>
						</otherwise>
					</choose>
					group by userName
				</if>
				<if test="params.endTime1 != null and params.endTime1.length() != 0">
					union all
					select UserName as userName,
						count(id) as noteNum,
						sum(abs(BettingAmount)) as betAmount,
						sum(WinLoseAmount) AS netAmount,
						sum(abs(ValidAmount)) as validBetAmount,
			  			sum(if(ValidAmount > 0, 1 ,0)) as validNoteNum
					from og_record
					where AddTime BETWEEN #{params.endTime1} and #{params.endTime}
					<if test="params.cagentName != null and params.cagentName.length() != 0">
						and cagent = #{params.cagentName,jdbcType=VARCHAR}
					</if>
					<choose>
						<!-- 按真实姓名查询 or 按代理商查询 or按会员分层查询查询  -->
						<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
							<if test="params.userNames != null and params.userNames.length() != 0">
								and UserName in ${params.userNames}
							</if>
						</when>
						<!-- 按会员账号查询 -->
						<otherwise>
							<!-- 如果有输入值 -->
							<if test="params.name != null and params.name.length() != 0">
						  		and UserName = #{params.name}
							</if>
						</otherwise>
					</choose>
					group by userName
				</if>
  		</otherwise>
  	</choose>
  </select>
</mapper>