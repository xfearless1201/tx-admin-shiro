<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.tianxia.admin.domain.ftpdata.MGGameRecordMapper" >
  <resultMap id="BaseResultMap" type="com.cn.tianxia.admin.project.ftpdata.MGGameRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="key" property="key" jdbcType="VARCHAR" />
    <result column="colId" property="colid" jdbcType="BIGINT" />
    <result column="horNeKey" property="hornekey" jdbcType="VARCHAR" />
    <result column="mbrNeKey" property="mbrnekey" jdbcType="VARCHAR" />
    <result column="betTransKey" property="bettranskey" jdbcType="VARCHAR" />
    <result column="gameKey" property="gamekey" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="product" property="product" jdbcType="VARCHAR" />
    <result column="transactionTimestampDate" property="transactiontimestampdate" jdbcType="TIMESTAMP" />
    <result column="amount" property="amount" jdbcType="REAL" />
    <result column="mbrCode" property="mbrcode" jdbcType="VARCHAR" />
    <result column="mbrAlias" property="mbralias" jdbcType="VARCHAR" />
    <result column="mbrUsername" property="mbrusername" jdbcType="VARCHAR" />
    <result column="gameCasinoId" property="gamecasinoid" jdbcType="VARCHAR" />
    <result column="gamePokerId" property="gamepokerid" jdbcType="VARCHAR" />
    <result column="gamePokerType" property="gamepokertype" jdbcType="VARCHAR" />
    <result column="refKey" property="refkey" jdbcType="VARCHAR" />
    <result column="refType" property="reftype" jdbcType="VARCHAR" />
    <result column="afterTxWalletAmount" property="aftertxwalletamount" jdbcType="REAL" />
    <result column="mgsGameId" property="mgsgameid" jdbcType="VARCHAR" />
    <result column="mgsActionId" property="mgsactionid" jdbcType="VARCHAR" />
    <result column="clrngAmnt" property="clrngamnt" jdbcType="REAL" />
    <result column="gamePlatformType" property="gameplatformtype" jdbcType="VARCHAR" />
    <result column="cagent" property="cagent" jdbcType="VARCHAR" />
    <result column="pull_time" property="pullTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, `key`, colId, horNeKey, mbrNeKey, betTransKey, gameKey, type, product, transactionTimestampDate, 
    amount, mbrCode, mbrAlias, mbrUsername, gameCasinoId, gamePokerId, gamePokerType, 
    refKey, refType, afterTxWalletAmount, mgsGameId, mgsActionId, clrngAmnt, gamePlatformType, 
    cagent, pull_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mggame_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mggame_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.tianxia.admin.project.ftpdata.MGGameRecord" >
    insert into mggame_record (id, key, colId, 
      horNeKey, mbrNeKey, betTransKey, 
      gameKey, type, product, 
      transactionTimestampDate, amount, mbrCode, 
      mbrAlias, mbrUsername, gameCasinoId, 
      gamePokerId, gamePokerType, refKey, 
      refType, afterTxWalletAmount, mgsGameId, 
      mgsActionId, clrngAmnt, gamePlatformType, 
      cagent, pull_time)
    values (#{id,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, #{colid,jdbcType=BIGINT}, 
      #{hornekey,jdbcType=VARCHAR}, #{mbrnekey,jdbcType=VARCHAR}, #{bettranskey,jdbcType=VARCHAR}, 
      #{gamekey,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{product,jdbcType=VARCHAR}, 
      #{transactiontimestampdate,jdbcType=TIMESTAMP}, #{amount,jdbcType=REAL}, #{mbrcode,jdbcType=VARCHAR}, 
      #{mbralias,jdbcType=VARCHAR}, #{mbrusername,jdbcType=VARCHAR}, #{gamecasinoid,jdbcType=VARCHAR}, 
      #{gamepokerid,jdbcType=VARCHAR}, #{gamepokertype,jdbcType=VARCHAR}, #{refkey,jdbcType=VARCHAR}, 
      #{reftype,jdbcType=VARCHAR}, #{aftertxwalletamount,jdbcType=REAL}, #{mgsgameid,jdbcType=VARCHAR}, 
      #{mgsactionid,jdbcType=VARCHAR}, #{clrngamnt,jdbcType=REAL}, #{gameplatformtype,jdbcType=VARCHAR}, 
      #{cagent,jdbcType=VARCHAR}, #{pullTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.tianxia.admin.project.ftpdata.MGGameRecord" >
    insert into mggame_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="key != null" >
        key,
      </if>
      <if test="colid != null" >
        colId,
      </if>
      <if test="hornekey != null" >
        horNeKey,
      </if>
      <if test="mbrnekey != null" >
        mbrNeKey,
      </if>
      <if test="bettranskey != null" >
        betTransKey,
      </if>
      <if test="gamekey != null" >
        gameKey,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="product != null" >
        product,
      </if>
      <if test="transactiontimestampdate != null" >
        transactionTimestampDate,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="mbrcode != null" >
        mbrCode,
      </if>
      <if test="mbralias != null" >
        mbrAlias,
      </if>
      <if test="mbrusername != null" >
        mbrUsername,
      </if>
      <if test="gamecasinoid != null" >
        gameCasinoId,
      </if>
      <if test="gamepokerid != null" >
        gamePokerId,
      </if>
      <if test="gamepokertype != null" >
        gamePokerType,
      </if>
      <if test="refkey != null" >
        refKey,
      </if>
      <if test="reftype != null" >
        refType,
      </if>
      <if test="aftertxwalletamount != null" >
        afterTxWalletAmount,
      </if>
      <if test="mgsgameid != null" >
        mgsGameId,
      </if>
      <if test="mgsactionid != null" >
        mgsActionId,
      </if>
      <if test="clrngamnt != null" >
        clrngAmnt,
      </if>
      <if test="gameplatformtype != null" >
        gamePlatformType,
      </if>
      <if test="cagent != null" >
        cagent,
      </if>
      <if test="pullTime != null" >
        pull_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="key != null" >
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="colid != null" >
        #{colid,jdbcType=BIGINT},
      </if>
      <if test="hornekey != null" >
        #{hornekey,jdbcType=VARCHAR},
      </if>
      <if test="mbrnekey != null" >
        #{mbrnekey,jdbcType=VARCHAR},
      </if>
      <if test="bettranskey != null" >
        #{bettranskey,jdbcType=VARCHAR},
      </if>
      <if test="gamekey != null" >
        #{gamekey,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="product != null" >
        #{product,jdbcType=VARCHAR},
      </if>
      <if test="transactiontimestampdate != null" >
        #{transactiontimestampdate,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=REAL},
      </if>
      <if test="mbrcode != null" >
        #{mbrcode,jdbcType=VARCHAR},
      </if>
      <if test="mbralias != null" >
        #{mbralias,jdbcType=VARCHAR},
      </if>
      <if test="mbrusername != null" >
        #{mbrusername,jdbcType=VARCHAR},
      </if>
      <if test="gamecasinoid != null" >
        #{gamecasinoid,jdbcType=VARCHAR},
      </if>
      <if test="gamepokerid != null" >
        #{gamepokerid,jdbcType=VARCHAR},
      </if>
      <if test="gamepokertype != null" >
        #{gamepokertype,jdbcType=VARCHAR},
      </if>
      <if test="refkey != null" >
        #{refkey,jdbcType=VARCHAR},
      </if>
      <if test="reftype != null" >
        #{reftype,jdbcType=VARCHAR},
      </if>
      <if test="aftertxwalletamount != null" >
        #{aftertxwalletamount,jdbcType=REAL},
      </if>
      <if test="mgsgameid != null" >
        #{mgsgameid,jdbcType=VARCHAR},
      </if>
      <if test="mgsactionid != null" >
        #{mgsactionid,jdbcType=VARCHAR},
      </if>
      <if test="clrngamnt != null" >
        #{clrngamnt,jdbcType=REAL},
      </if>
      <if test="gameplatformtype != null" >
        #{gameplatformtype,jdbcType=VARCHAR},
      </if>
      <if test="cagent != null" >
        #{cagent,jdbcType=VARCHAR},
      </if>
      <if test="pullTime != null" >
        #{pullTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.tianxia.admin.project.ftpdata.MGGameRecord" >
    update mggame_record
    <set >
      <if test="key != null" >
        key = #{key,jdbcType=VARCHAR},
      </if>
      <if test="colid != null" >
        colId = #{colid,jdbcType=BIGINT},
      </if>
      <if test="hornekey != null" >
        horNeKey = #{hornekey,jdbcType=VARCHAR},
      </if>
      <if test="mbrnekey != null" >
        mbrNeKey = #{mbrnekey,jdbcType=VARCHAR},
      </if>
      <if test="bettranskey != null" >
        betTransKey = #{bettranskey,jdbcType=VARCHAR},
      </if>
      <if test="gamekey != null" >
        gameKey = #{gamekey,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="product != null" >
        product = #{product,jdbcType=VARCHAR},
      </if>
      <if test="transactiontimestampdate != null" >
        transactionTimestampDate = #{transactiontimestampdate,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=REAL},
      </if>
      <if test="mbrcode != null" >
        mbrCode = #{mbrcode,jdbcType=VARCHAR},
      </if>
      <if test="mbralias != null" >
        mbrAlias = #{mbralias,jdbcType=VARCHAR},
      </if>
      <if test="mbrusername != null" >
        mbrUsername = #{mbrusername,jdbcType=VARCHAR},
      </if>
      <if test="gamecasinoid != null" >
        gameCasinoId = #{gamecasinoid,jdbcType=VARCHAR},
      </if>
      <if test="gamepokerid != null" >
        gamePokerId = #{gamepokerid,jdbcType=VARCHAR},
      </if>
      <if test="gamepokertype != null" >
        gamePokerType = #{gamepokertype,jdbcType=VARCHAR},
      </if>
      <if test="refkey != null" >
        refKey = #{refkey,jdbcType=VARCHAR},
      </if>
      <if test="reftype != null" >
        refType = #{reftype,jdbcType=VARCHAR},
      </if>
      <if test="aftertxwalletamount != null" >
        afterTxWalletAmount = #{aftertxwalletamount,jdbcType=REAL},
      </if>
      <if test="mgsgameid != null" >
        mgsGameId = #{mgsgameid,jdbcType=VARCHAR},
      </if>
      <if test="mgsactionid != null" >
        mgsActionId = #{mgsactionid,jdbcType=VARCHAR},
      </if>
      <if test="clrngamnt != null" >
        clrngAmnt = #{clrngamnt,jdbcType=REAL},
      </if>
      <if test="gameplatformtype != null" >
        gamePlatformType = #{gameplatformtype,jdbcType=VARCHAR},
      </if>
      <if test="cagent != null" >
        cagent = #{cagent,jdbcType=VARCHAR},
      </if>
      <if test="pullTime != null" >
        pull_time = #{pullTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.tianxia.admin.project.ftpdata.MGGameRecord" >
    update mggame_record
    set key = #{key,jdbcType=VARCHAR},
      colId = #{colid,jdbcType=BIGINT},
      horNeKey = #{hornekey,jdbcType=VARCHAR},
      mbrNeKey = #{mbrnekey,jdbcType=VARCHAR},
      betTransKey = #{bettranskey,jdbcType=VARCHAR},
      gameKey = #{gamekey,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      product = #{product,jdbcType=VARCHAR},
      transactionTimestampDate = #{transactiontimestampdate,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=REAL},
      mbrCode = #{mbrcode,jdbcType=VARCHAR},
      mbrAlias = #{mbralias,jdbcType=VARCHAR},
      mbrUsername = #{mbrusername,jdbcType=VARCHAR},
      gameCasinoId = #{gamecasinoid,jdbcType=VARCHAR},
      gamePokerId = #{gamepokerid,jdbcType=VARCHAR},
      gamePokerType = #{gamepokertype,jdbcType=VARCHAR},
      refKey = #{refkey,jdbcType=VARCHAR},
      refType = #{reftype,jdbcType=VARCHAR},
      afterTxWalletAmount = #{aftertxwalletamount,jdbcType=REAL},
      mgsGameId = #{mgsgameid,jdbcType=VARCHAR},
      mgsActionId = #{mgsactionid,jdbcType=VARCHAR},
      clrngAmnt = #{clrngamnt,jdbcType=REAL},
      gamePlatformType = #{gameplatformtype,jdbcType=VARCHAR},
      cagent = #{cagent,jdbcType=VARCHAR},
      pull_time = #{pullTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <!-- add by gate -->
  <select id="listGameRecord" parameterType="com.cn.tianxia.admin.common.Pager" resultMap="BaseResultMap">
  	<choose>
  		<!-- 如果用户分组为0 则执行此sql -->
  		<when test="params.userGrouping == 0">
  			select 
		  		<include refid="Base_Column_List" /> 
		  	from mggame_record force index(transactionTimestampDate)
			where transactionTimestampDate BETWEEN #{params.startTime} and #{params.endTime}
			<if test="params.cagentName != null and params.cagentName.length() != 0">
				and cagent = #{params.cagentName}
			</if>
			<choose>
				<!-- 按真实姓名查询  or 按代理商查询  or 按会员分层查询查询  -->
				<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
					<if test="params.userName != null and params.userName.length() != 0">
						and mbrUsername in ${params.userName}
					</if>
				</when>
				<otherwise>
					<!-- 如果有输入值 -->
					<if test="params.name != null and params.name.length() != 0">
				  		and mbrUsername = #{params.name}
					</if>
				</otherwise>
			</choose>
			ORDER BY transactionTimestampDate desc 
			limit
			${(page-1)*limit},
			#{limit,jdbcType=INTEGER};
  		</when>
  		<otherwise>
  			select mbrUsername,
	  			count(mbrUsername) as id,
	  			<!-- 投注额  -->
	  			sum(if(type = 'mgsaspibet',amount,0)) as amount,
	  			<!-- 输赢额  -->
	  			sum(if(type = 'mgsapiwin',amount,if(type = 'mgsapirefund',amount,-abs(amount)))) as mbrCode,
	  			<!-- 有效投注额  -->
	  			sum(if(type = 'mgsaspibet',amount ,if(type = 'mgsapirefund',-abs(amount),0))) as mbrAlias,
	  			<!-- 有效注单量  -->
	  			sum(if(type = 'mgsapiwin', 0,1)) as gameCasinoId
  			from mggame_record force index(transactionTimestampDate) as 
  			where transactionTimestampDate BETWEEN #{params.startTime} and #{params.endTime}
  			<if test="params.cagentName != null and params.cagentName.length() != 0">
				and cagent = #{params.cagentName,jdbcType=VARCHAR}
			</if>
			<choose>
				<!-- 按真实姓名查询  or 按代理商查询  or 按会员分层查询查询  -->
				<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
					<if test="params.userName != null and params.userName.length() != 0">
						and mbrUsername in ${params.userName}
					</if>
				</when>
				<otherwise>
					<!-- 如果有输入值 -->
					<if test="params.name != null and params.name.length() != 0">
				  		and mbrUsername = #{params.name}
					</if>
				</otherwise>
			</choose>
			GROUP BY mbrUsername
			limit
			${(page-1)*limit},
			#{limit,jdbcType=INTEGER};
  		</otherwise>
  	</choose>
  </select>
  
  <select id="countTotal" parameterType="com.cn.tianxia.admin.common.Pager" resultType="java.util.Map">
  	<choose>
  		<!-- gamePlatFormName 不为空 需要走明细表 表示选择了ag国际或者ag视讯,勾选了实时分页也需要走明细-->
  		<when test="(params.gamePlatFormName != null and params.gamePlatFormName.length() != 0)
  						or (params.dateGrouping != 0)">
  			select 'total' as userName,
		  		count(id) as noteNum,
	  			sum(if(type = 'mgsaspibet',amount,0)) as betAmount,
	  			sum(if(type = 'mgsapiwin',amount,if(type = 'mgsapirefund',amount,-abs(amount)))) as netAmount,
	  			sum(if(type = 'mgsaspibet',amount ,if(type = 'mgsapirefund',-abs(amount),0))) as validBetAmount,
	  			sum(if(type = 'mgsapiwin', 0,1)) as validNoteNum
		  	from mggame_record force index(transactionTimestampDate)
			where transactionTimestampDate BETWEEN #{params.startTime} and #{params.endTime}
			<if test="params.cagentName != null and params.cagentName.length() != 0">
				and cagent = #{params.cagentName,jdbcType=VARCHAR}
			</if>
			<choose>
				<!-- 按真实姓名查询  or 按代理商查询 or 按会员分层查询查询-->
				<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
					<if test="params.userNames != null and params.userNames.length() != 0">
						and mbrUsername in ${params.userNames}
					</if>
				</when>
				<!-- 按会员账号查询 -->
				<otherwise>
					<!-- 如果有输入值 -->
					<if test="params.name != null and params.name.length() != 0">
				  		and mbrUsername = #{params.name}
					</if>
				</otherwise>
			</choose>
  		</when>
  		<otherwise>
  			select user_name as userName,
		  		sum(note_num) as noteNum,
		  		sum(bet_amount) as betAmount,
		  		sum(net_amount) as netAmount,
		  		sum(valid_bet_amount) as validBetAmount,
		  		sum(note_num) as validNoteNum
		  	from mggame_platform_report
		  	where bet_time BETWEEN #{params.nextStartDay} and #{params.lastEndDay}
		  		and type = 0
				<if test="params.cagentName != null and params.cagentName.length() != 0">
					and cagent = #{params.cagentName}
				</if>
				<choose>
					<!-- 按真实姓名查询 or 按代理商查询  or 按会员分层查询查询-->
					<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
						<if test="params.userNames != null and params.userNames.length() != 0">
							and user_name in ${params.userNames}
						</if>
					</when>
					<!-- 按会员账号查询 -->
					<otherwise>
						<!-- 如果有输入值 -->
						<if test="params.name != null and params.name.length() != 0">
					  		and user_name = #{params.name}
						</if>
					</otherwise>
				</choose>
				group by userName
				<if test="params.startTime1 != null and params.startTime1.length() != 0">
					union all
					select mbrUsername as userName,
						count(id) as noteNum,
						sum(if(type = 'mgsaspibet',amount,0)) as betAmount,
			  			sum(if(type = 'mgsapiwin',amount,if(type = 'mgsapirefund',amount,-abs(amount)))) as netAmount,
			  			sum(if(type = 'mgsaspibet',amount ,if(type = 'mgsapirefund',-abs(amount),0))) as validBetAmount,
			  			sum(if(type = 'mgsapiwin', 0,1)) as validNoteNum
					from mggame_record 
					where transactionTimestampDate BETWEEN #{params.startTime} and #{params.startTime1}
					<if test="params.cagentName != null and params.cagentName.length() != 0">
						and cagent = #{params.cagentName,jdbcType=VARCHAR}
					</if>
					<choose>
						<!-- 按真实姓名查询 or 按代理商查询 or按会员分层查询查询  -->
						<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
							<if test="params.userNames != null and params.userNames.length() != 0">
								and mbrUsername in ${params.userNames}
							</if>
						</when>
						<!-- 按会员账号查询 -->
						<otherwise>
							<!-- 如果有输入值 -->
							<if test="params.name != null and params.name.length() != 0">
						  		and mbrUsername = #{params.name}
							</if>
						</otherwise>
					</choose>
					group by userName
				</if>
				<if test="params.endTime1 != null and params.endTime1.length() != 0">
					union all
					select mbrUsername as userName,
						count(id) as noteNum,
						sum(if(type = 'mgsaspibet',amount,0)) as betAmount,
			  			sum(if(type = 'mgsapiwin',amount,if(type = 'mgsapirefund',amount,-abs(amount)))) as netAmount,
			  			sum(if(type = 'mgsaspibet',amount ,if(type = 'mgsapirefund',-abs(amount),0))) as validBetAmount,
			  			sum(if(type = 'mgsapiwin', 0,1)) as validNoteNum
					from mggame_record 
					where transactionTimestampDate BETWEEN #{params.endTime1} and #{params.endTime}
					<if test="params.cagentName != null and params.cagentName.length() != 0">
						and cagent = #{params.cagentName,jdbcType=VARCHAR}
					</if>
					<choose>
						<!-- 按真实姓名查询 or 按代理商查询 or按会员分层查询查询  -->
						<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
							<if test="params.userNames != null and params.userNames.length() != 0">
								and mbrUsername in ${params.userNames}
							</if>
						</when>
						<!-- 按会员账号查询 -->
						<otherwise>
							<!-- 如果有输入值 -->
							<if test="params.name != null and params.name.length() != 0">
						  		and mbrUsername = #{params.name}
							</if>
						</otherwise>
					</choose>
					group by userName
				</if>
  		</otherwise>
  	</choose>
  </select>
</mapper>