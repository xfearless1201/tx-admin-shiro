<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.tianxia.admin.domain.ftpdata.HBGameRecordMapper" >
  <resultMap id="BaseResultMap" type="com.cn.tianxia.admin.project.ftpdata.HBGameRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="playerId" property="playerid" jdbcType="VARCHAR" />
    <result column="brandId" property="brandid" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="brandGameId" property="brandgameid" jdbcType="VARCHAR" />
    <result column="gameKeyName" property="gamekeyname" jdbcType="VARCHAR" />
    <result column="gameTypeId" property="gametypeid" jdbcType="INTEGER" />
    <result column="dtStarted" property="dtstarted" jdbcType="TIMESTAMP" />
    <result column="dtCompleted" property="dtcompleted" jdbcType="TIMESTAMP" />
    <result column="friendlyGameInstanceId" property="friendlygameinstanceid" jdbcType="INTEGER" />
    <result column="gameInstanceId" property="gameinstanceid" jdbcType="VARCHAR" />
    <result column="stake" property="stake" jdbcType="REAL" />
    <result column="payout" property="payout" jdbcType="REAL" />
    <result column="jackpotWin" property="jackpotwin" jdbcType="REAL" />
    <result column="jackpotContribution" property="jackpotcontribution" jdbcType="VARCHAR" />
    <result column="currencyCode" property="currencycode" jdbcType="VARCHAR" />
    <result column="channelTypeId" property="channeltypeid" jdbcType="VARCHAR" />
    <result column="cagent" property="cagent" jdbcType="VARCHAR" />
    <result column="pull_time" property="pullTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, playerId, brandId, username, brandGameId, gameKeyName, gameTypeId, dtStarted, 
    dtCompleted, friendlyGameInstanceId, gameInstanceId, stake, payout, jackpotWin, jackpotContribution, 
    currencyCode, channelTypeId, cagent, pull_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from haba_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from haba_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.tianxia.admin.project.ftpdata.HBGameRecord" >
    insert into haba_record (id, playerId, brandId, 
      username, brandGameId, gameKeyName, 
      gameTypeId, dtStarted, dtCompleted, 
      friendlyGameInstanceId, gameInstanceId, 
      stake, payout, jackpotWin, jackpotContribution, 
      currencyCode, channelTypeId, cagent, 
      pull_time)
    values (#{id,jdbcType=INTEGER}, #{playerid,jdbcType=VARCHAR}, #{brandid,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{brandgameid,jdbcType=VARCHAR}, #{gamekeyname,jdbcType=VARCHAR}, 
      #{gametypeid,jdbcType=INTEGER}, #{dtstarted,jdbcType=TIMESTAMP}, #{dtcompleted,jdbcType=TIMESTAMP}, 
      #{friendlygameinstanceid,jdbcType=INTEGER}, #{gameinstanceid,jdbcType=VARCHAR}, 
      #{stake,jdbcType=REAL}, #{payout,jdbcType=REAL}, #{jackpotwin,jdbcType=REAL}, #{jackpotcontribution,jdbcType=VARCHAR}, 
      #{currencycode,jdbcType=VARCHAR}, #{channeltypeid,jdbcType=VARCHAR}, #{cagent,jdbcType=VARCHAR}, 
      #{pullTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.tianxia.admin.project.ftpdata.HBGameRecord" >
    insert into haba_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="playerid != null" >
        playerId,
      </if>
      <if test="brandid != null" >
        brandId,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="brandgameid != null" >
        brandGameId,
      </if>
      <if test="gamekeyname != null" >
        gameKeyName,
      </if>
      <if test="gametypeid != null" >
        gameTypeId,
      </if>
      <if test="dtstarted != null" >
        dtStarted,
      </if>
      <if test="dtcompleted != null" >
        dtCompleted,
      </if>
      <if test="friendlygameinstanceid != null" >
        friendlyGameInstanceId,
      </if>
      <if test="gameinstanceid != null" >
        gameInstanceId,
      </if>
      <if test="stake != null" >
        stake,
      </if>
      <if test="payout != null" >
        payout,
      </if>
      <if test="jackpotwin != null" >
        jackpotWin,
      </if>
      <if test="jackpotcontribution != null" >
        jackpotContribution,
      </if>
      <if test="currencycode != null" >
        currencyCode,
      </if>
      <if test="channeltypeid != null" >
        channelTypeId,
      </if>
      <if test="cagent != null" >
        cagent,
      </if>
      <if test="pullTime != null" >
        pull_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="playerid != null" >
        #{playerid,jdbcType=VARCHAR},
      </if>
      <if test="brandid != null" >
        #{brandid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="brandgameid != null" >
        #{brandgameid,jdbcType=VARCHAR},
      </if>
      <if test="gamekeyname != null" >
        #{gamekeyname,jdbcType=VARCHAR},
      </if>
      <if test="gametypeid != null" >
        #{gametypeid,jdbcType=INTEGER},
      </if>
      <if test="dtstarted != null" >
        #{dtstarted,jdbcType=TIMESTAMP},
      </if>
      <if test="dtcompleted != null" >
        #{dtcompleted,jdbcType=TIMESTAMP},
      </if>
      <if test="friendlygameinstanceid != null" >
        #{friendlygameinstanceid,jdbcType=INTEGER},
      </if>
      <if test="gameinstanceid != null" >
        #{gameinstanceid,jdbcType=VARCHAR},
      </if>
      <if test="stake != null" >
        #{stake,jdbcType=REAL},
      </if>
      <if test="payout != null" >
        #{payout,jdbcType=REAL},
      </if>
      <if test="jackpotwin != null" >
        #{jackpotwin,jdbcType=REAL},
      </if>
      <if test="jackpotcontribution != null" >
        #{jackpotcontribution,jdbcType=VARCHAR},
      </if>
      <if test="currencycode != null" >
        #{currencycode,jdbcType=VARCHAR},
      </if>
      <if test="channeltypeid != null" >
        #{channeltypeid,jdbcType=VARCHAR},
      </if>
      <if test="cagent != null" >
        #{cagent,jdbcType=VARCHAR},
      </if>
      <if test="pullTime != null" >
        #{pullTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.tianxia.admin.project.ftpdata.HBGameRecord" >
    update haba_record
    <set >
      <if test="playerid != null" >
        playerId = #{playerid,jdbcType=VARCHAR},
      </if>
      <if test="brandid != null" >
        brandId = #{brandid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="brandgameid != null" >
        brandGameId = #{brandgameid,jdbcType=VARCHAR},
      </if>
      <if test="gamekeyname != null" >
        gameKeyName = #{gamekeyname,jdbcType=VARCHAR},
      </if>
      <if test="gametypeid != null" >
        gameTypeId = #{gametypeid,jdbcType=INTEGER},
      </if>
      <if test="dtstarted != null" >
        dtStarted = #{dtstarted,jdbcType=TIMESTAMP},
      </if>
      <if test="dtcompleted != null" >
        dtCompleted = #{dtcompleted,jdbcType=TIMESTAMP},
      </if>
      <if test="friendlygameinstanceid != null" >
        friendlyGameInstanceId = #{friendlygameinstanceid,jdbcType=INTEGER},
      </if>
      <if test="gameinstanceid != null" >
        gameInstanceId = #{gameinstanceid,jdbcType=VARCHAR},
      </if>
      <if test="stake != null" >
        stake = #{stake,jdbcType=REAL},
      </if>
      <if test="payout != null" >
        payout = #{payout,jdbcType=REAL},
      </if>
      <if test="jackpotwin != null" >
        jackpotWin = #{jackpotwin,jdbcType=REAL},
      </if>
      <if test="jackpotcontribution != null" >
        jackpotContribution = #{jackpotcontribution,jdbcType=VARCHAR},
      </if>
      <if test="currencycode != null" >
        currencyCode = #{currencycode,jdbcType=VARCHAR},
      </if>
      <if test="channeltypeid != null" >
        channelTypeId = #{channeltypeid,jdbcType=VARCHAR},
      </if>
      <if test="cagent != null" >
        cagent = #{cagent,jdbcType=VARCHAR},
      </if>
      <if test="pullTime != null" >
        pull_time = #{pullTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.tianxia.admin.project.ftpdata.HBGameRecord" >
    update haba_record
    set playerId = #{playerid,jdbcType=VARCHAR},
      brandId = #{brandid,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      brandGameId = #{brandgameid,jdbcType=VARCHAR},
      gameKeyName = #{gamekeyname,jdbcType=VARCHAR},
      gameTypeId = #{gametypeid,jdbcType=INTEGER},
      dtStarted = #{dtstarted,jdbcType=TIMESTAMP},
      dtCompleted = #{dtcompleted,jdbcType=TIMESTAMP},
      friendlyGameInstanceId = #{friendlygameinstanceid,jdbcType=INTEGER},
      gameInstanceId = #{gameinstanceid,jdbcType=VARCHAR},
      stake = #{stake,jdbcType=REAL},
      payout = #{payout,jdbcType=REAL},
      jackpotWin = #{jackpotwin,jdbcType=REAL},
      jackpotContribution = #{jackpotcontribution,jdbcType=VARCHAR},
      currencyCode = #{currencycode,jdbcType=VARCHAR},
      channelTypeId = #{channeltypeid,jdbcType=VARCHAR},
      cagent = #{cagent,jdbcType=VARCHAR},
      pull_time = #{pullTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- add by gate -->
  <select id="listGameRecord" parameterType="com.cn.tianxia.admin.common.Pager" resultMap="BaseResultMap">
  	<choose>
  		<!-- 如果用户分组为0 则执行此sql -->
  		<when test="params.userGrouping == 0">
  			select 
		  		<include refid="Base_Column_List" /> 
		  	from haba_record force index(dtCompleted)
			where dtCompleted BETWEEN #{params.startTime} and #{params.endTime}
			<if test="params.cagentName != null and params.cagentName.length() != 0">
				and cagent = #{params.cagentName}
			</if>
			<choose>
				<!-- 按真实姓名查询  or 按代理商查询  or 按会员分层查询查询  -->
				<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
					<if test="params.userName != null and params.userName.length() != 0">
						and username in ${params.userName}
					</if>
				</when>
				<otherwise>
					<!-- 如果有输入值 -->
					<if test="params.name != null and params.name.length() != 0">
				  		and username = #{params.name}
					</if>
				</otherwise>
			</choose>
			ORDER BY dtCompleted desc 
			limit
			${(page-1)*limit},
			#{limit,jdbcType=INTEGER};
  		</when>
  		<otherwise>
  			select username,
	  			count(username) as id,
	  			sum(abs(stake)) as stake,
	  			sum(abs(payout) - abs(stake)) as payout
  			from haba_record force index(dtCompleted)
  			where dtCompleted BETWEEN #{params.startTime} and #{params.endTime}
  			<if test="params.cagentName != null and params.cagentName.length() != 0">
				and cagent = #{params.cagentName,jdbcType=VARCHAR}
			</if>
			<choose>
				<!-- 按真实姓名查询  or 按代理商查询  or 按会员分层查询查询  -->
				<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
					<if test="params.userName != null and params.userName.length() != 0">
						and username in ${params.userName}
					</if>
				</when>
				<otherwise>
					<!-- 如果有输入值 -->
					<if test="params.name != null and params.name.length() != 0">
				  		and username = #{params.name}
					</if>
				</otherwise>
			</choose>
			GROUP BY username
			limit
			${(page-1)*limit},
			#{limit,jdbcType=INTEGER};
  		</otherwise>
  	</choose>
  </select>
  
  <select id="countTotal" parameterType="com.cn.tianxia.admin.common.Pager" resultType="java.util.Map">
  	<choose>
  		<!-- gamePlatFormName 不为空 需要走明细表 表示选择了ag国际或者ag视讯,勾选了实时分页也需要走明细-->
  		<when test="(params.gamePlatFormName != null and params.gamePlatFormName.length() != 0)
  						or (params.dateGrouping != 0)">
  			select 'total' as userName,
		  		count(id) as noteNum,
	  			sum(abs(stake)) as betAmount,
	  			sum(abs(payout) - abs(stake)) as netAmount,
	  			sum(abs(stake)) as validBetAmount,
	  			count(id) as validNoteNum
		  	from haba_record force index(dtCompleted)
			where dtCompleted BETWEEN #{params.startTime} and #{params.endTime}
			<if test="params.cagentName != null and params.cagentName.length() != 0">
				and cagent = #{params.cagentName,jdbcType=VARCHAR}
			</if>
			<choose>
				<!-- 按真实姓名查询  or 按代理商查询 or 按会员分层查询查询-->
				<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
					<if test="params.userNames != null and params.userNames.length() != 0">
						and username in ${params.userNames}
					</if>
				</when>
				<!-- 按会员账号查询 -->
				<otherwise>
					<!-- 如果有输入值 -->
					<if test="params.name != null and params.name.length() != 0">
				  		and username = #{params.name}
					</if>
				</otherwise>
			</choose>
  		</when>
  		<otherwise>
  			select user_name as userName,
		  		sum(note_num) as noteNum,
		  		sum(bet_amount) as betAmount,
		  		sum(net_amount) as netAmount,
		  		sum(valid_bet_amount) as validBetAmount,
		  		sum(note_num) as validNoteNum
		  	from haba_platform_report
		  	where bet_time BETWEEN #{params.nextStartDay} and #{params.lastEndDay}
		  		and type = 0
				<if test="params.cagentName != null and params.cagentName.length() != 0">
					and cagent = #{params.cagentName}
				</if>
				<choose>
					<!-- 按真实姓名查询 or 按代理商查询  or 按会员分层查询查询-->
					<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
						<if test="params.userNames != null and params.userNames.length() != 0">
							and user_name in ${params.userNames}
						</if>
					</when>
					<!-- 按会员账号查询 -->
					<otherwise>
						<!-- 如果有输入值 -->
						<if test="params.name != null and params.name.length() != 0">
					  		and user_name = #{params.name}
						</if>
					</otherwise>
				</choose>
				group by userName
				<if test="params.startTime1 != null and params.startTime1.length() != 0">
					union all
					select username as userName,
						count(id) as noteNum,
			  			sum(abs(stake)) as betAmount,
			  			sum(abs(payout) - abs(stake)) as netAmount,
			  			sum(abs(stake)) as validBetAmount,
	  					count(id) as validNoteNum
					from haba_record 
					where dtCompleted BETWEEN #{params.startTime} and #{params.startTime1}
					<if test="params.cagentName != null and params.cagentName.length() != 0">
						and cagent = #{params.cagentName,jdbcType=VARCHAR}
					</if>
					<choose>
						<!-- 按真实姓名查询 or 按代理商查询 or按会员分层查询查询  -->
						<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
							<if test="params.userNames != null and params.userNames.length() != 0">
								and UserName in ${params.userNames}
							</if>
						</when>
						<!-- 按会员账号查询 -->
						<otherwise>
							<!-- 如果有输入值 -->
							<if test="params.name != null and params.name.length() != 0">
						  		and UserName = #{params.name}
							</if>
						</otherwise>
					</choose>
					group by userName
				</if>
				<if test="params.endTime1 != null and params.endTime1.length() != 0">
					union all
					select username as userName,
						count(id) as noteNum,
						sum(abs(stake)) as betAmount,
			  			sum(abs(payout) - abs(stake)) as netAmount,
			  			sum(abs(stake)) as validBetAmount,
			  			count(id) as validNoteNum
					from haba_record 
					where dtCompleted BETWEEN #{params.endTime1} and #{params.endTime}
					<if test="params.cagentName != null and params.cagentName.length() != 0">
						and cagent = #{params.cagentName,jdbcType=VARCHAR}
					</if>
					<choose>
						<!-- 按真实姓名查询 or 按代理商查询 or按会员分层查询查询  -->
						<when test="params.queryType == 1 or params.queryType == 2 or params.queryType == 3">
							<if test="params.userNames != null and params.userNames.length() != 0">
								and UserName in ${params.userNames}
							</if>
						</when>
						<!-- 按会员账号查询 -->
						<otherwise>
							<!-- 如果有输入值 -->
							<if test="params.name != null and params.name.length() != 0">
						  		and UserName = #{params.name}
							</if>
						</otherwise>
					</choose>
					group by userName
				</if>
  		</otherwise>
  	</choose>
  </select>
</mapper>